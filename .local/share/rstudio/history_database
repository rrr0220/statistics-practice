1640008497411:data = c(3, 4, 2, 9, 6, 7, 5, 6, 5, 4)
1640008526353:data_ave = mean(data)
1640008543478:data_var = var(data)
1640008552599:?var
1640008568014:?mean
1640008572496:?var
1640008580437:data_var = stats::var(data)
1640008720184:?sqrt
1640008732988:z = (data_ave - 3) / sqrt(data_var)
1640009029795:# 指定したｚ値の上側確率P(z>z値)
1640009029807:?pnorm
1640009063653:# 指定したｚ値の上側確率P(z>z値)
1640009063666:stats::pnorm(z, lower.tail=F)
1640009078162:stats::pnorm(z)
1640009256283:curve(dnorm,-5,5)
1640009282333:?curve
1640009327659:graphics::curve(dnorm, from=-5, to=5)
1640009601292:graphics::curve(dnorm(x, mean=0, sd=1), from=-5, to=5)
1640009635812:?std
1640009787179:data_var = sum((data - data_ave) ^ 2) / length(data)
1640009839478:data_var.s = stats::var(data)
1640009904053:data_var = sum((data-data_ave)^2) / length(data)
1640009905712:data_var.s = stats::var(data)
1640009908901:data_var * length(data) / (length(data)-1)
1640009970651:# H0：μ=3 のとき、z値の算出
1640009970663:z = (data_ave - 3) / sqrt(data_var)
1640009991407:# 指定したｚ値の上側確率P(z>z値)
1640009991419:stats::pnorm(z, lower.tail=F)
1640010134944:# 指定した上側確率に対応するｚ値（境界値）
1640010134955:qnorm(0.25, lower.tail=F)
1640010143353:# 指定した上側確率に対応するｚ値（境界値）
1640010143366:qnorm(0.025, lower.tail=F)
1640010168101:?qnorm
1640010188541:# 指定した上側確率に対応するｚ値（境界値）
1640010188553:stats::qnorm(0.025, lower.tail=F)
1640010308686:# 描画
1640010308700:par(new=T)
1640010322226:?par
1640010331992:# 描画
1640010332004:graphics::par(new=T)
1640010363290:# 描画
1640010363303:graphics::par(new=TRUE)
1640010403091:graphics::curve(dnorm(x, mean=0, sd=1), from=-5, to=5)
1640010425266:?abline
1640010449158:graphics::curve(dnorm(x, mean=0, sd=1), from=-5, to=5)
1640010449933:graphics::abline(v=0)
1640010456955:graphics::curve(dnorm(x, mean=0, sd=1), from=-5, to=5)
1640010465748:graphics::abline(v=z)
1640010493391:graphics::abline(v=stats::qnorm(0.025, lower.tail=F))
1640010531113:graphics::abline(v=z, col="red")
1640010534020:# 描画
1640010534032:graphics::par(new=TRUE)
1640010534440:graphics::curve(dnorm(x, mean=0, sd=1), from=-5, to=5)
1640010541503:graphics::curve(dnorm(x, mean=0, sd=1), from=-5, to=5)
1640010543875:graphics::abline(v=z, col="red")
1640010544641:graphics::abline(v=stats::qnorm(0.025, lower.tail=F))
1640010553121:graphics::curve(dnorm(x, mean=0, sd=1), from=-5, to=5)
1640010558903:graphics::abline(v=z, col="blue")
1640010572031:graphics::abline(v=stats::qnorm(0.025, lower.tail=F), col="blue")
1640010599010:graphics::abline(v=stats::qnorm(0.025), col="red")
1640010601878:# 描画
1640010601890:graphics::par(new=TRUE)
1640010602828:graphics::curve(dnorm(x, mean=0, sd=1), from=-5, to=5)
1640010606133:graphics::curve(dnorm(x, mean=0, sd=1), from=-5, to=5)
1640010607399:graphics::abline(v=z, col="blue")
1640010608271:graphics::abline(v=stats::qnorm(0.025, lower.tail=F), col="red")
1640010608894:graphics::abline(v=stats::qnorm(0.025), col="red")
1640010769420:# 指定した上側確率に対応するｚ値（境界値）
1640010769434:stats::qnorm(0.025, lower.tail=F)
1640010936922:z_lower = data_ave - stats::pnorm(z, lower.tail=F) * sqrt(data_var)
1640010958362:z_Upper = data_ave + stats::pnorm(z, lower.tail=F) * sqrt(data_var)
1640010993303:z_upper = data_ave + stats::pnorm(z, lower.tail=F) * sqrt(data_var)
1640011030668:z_lower = data_ave - stats::qnorm(0.025, lower.tail=F) * sqrt(data_var)
1640011032384:z_upper = data_ave + stats::qnorm(0.025, lower.tail=F) * sqrt(data_var)
1640011318355:graphics::curve(dnorm(x, mean=data_ave, sd=sqrt(data_var)), from=-5, to=10)
1640011326738:graphics::curve(dnorm(x, mean=data_ave, sd=sqrt(data_var)), from=-5, to=15)
1640011371252:graphics::abline(v=z_lower, col="red")
1640011372067:graphics::abline(v=z_upper, col="red")
1640011698825:# H0：μ=3 のとき、t値の算出
1640011698837:t = (data_ave - 3) / sqrt(data_var.s / length(data))
1640011725693:# H0：μ=3 のとき、z値の算出
1640011725707:z = (data_ave - 3) / sqrt(data_var / length(data))
1640011727747:# 指定したｚ値の上側確率P(z>z値)
1640011727760:stats::pnorm(z, lower.tail=F)
1640011728897:# 指定した上側確率に対応するｚ値（境界値）
1640011728911:stats::qnorm(0.025, lower.tail=F)
1640011730745:# 描画
1640011730759:graphics::par(new=TRUE)
1640011732424:graphics::curve(dnorm(x, mean=0, sd=1), from=-5, to=5)
1640011733455:graphics::abline(v=z, col="blue")
1640011735568:# 描画
1640011735580:graphics::par(new=TRUE)
1640011736780:graphics::curve(dnorm(x, mean=0, sd=1), from=-5, to=5)
1640011739287:graphics::curve(dnorm(x, mean=0, sd=1), from=-5, to=5)
1640011741084:graphics::abline(v=z, col="blue")
1640011743746:graphics::abline(v=stats::qnorm(0.025, lower.tail=F), col="red")
1640011746016:graphics::abline(v=stats::qnorm(0.025), col="red")
1640011764325:z_lower = data_ave - stats::qnorm(0.025, lower.tail=F) * sqrt(data_var)
1640011765498:z_upper = data_ave + stats::qnorm(0.025, lower.tail=F) * sqrt(data_var)
1640011784729:z_lower = data_ave - stats::qnorm(0.025, lower.tail=F) * sqrt(data_var)
1640011785191:z_upper = data_ave + stats::qnorm(0.025, lower.tail=F) * sqrt(data_var)
1640011852353:x_ave_lower = data_ave - stats::qnorm(0.025, lower.tail=F) * sqrt(data_var)
1640011853366:x_ave_upper = data_ave + stats::qnorm(0.025, lower.tail=F) * sqrt(data_var)
1640011874880:# 描画
1640011874891:graphics::par(new=TRUE)
1640011875359:graphics::curve(dnorm(x, mean=data_ave, sd=sqrt(data_var)), from=-5, to=15)
1640011878438:graphics::curve(dnorm(x, mean=data_ave, sd=sqrt(data_var)), from=-5, to=15)
1640011880153:graphics::abline(v=x_ave_lower, col="red")
1640011881668:graphics::abline(v=x_ave_upper, col="red")
1640011919223:data = c(3, 4, 2, 9, 6, 7, 5, 6, 5, 4)
1640011920314:# 平均の算出
1640011920327:data_ave = mean(data)
1640011921989:# 分散の算出
1640011922001:data_var = sum((data-data_ave)^2) / length(data)
1640011923134:# 不偏分散の算出
1640011923147:data_var.s = stats::var(data)
1640011924277:# H0：μ=3 のとき、z値の算出
1640011924289:z = (data_ave - 3) / sqrt(data_var / length(data))
1640011949328:# 指定したｚ値の上側確率P(z>z値)
1640011949340:stats::pnorm(z, lower.tail=F)
1640011950135:# 指定した上側確率に対応するｚ値（境界値）
1640011950147:stats::qnorm(0.025, lower.tail=F)
1640011951259:# 描画
1640011951272:graphics::par(new=TRUE)
1640011952506:graphics::curve(dnorm(x, mean=0, sd=1), from=-5, to=5)
1640011953863:graphics::curve(dnorm(x, mean=0, sd=1), from=-5, to=5)
1640011961380:graphics::abline(v=z, col="blue")
1640011963014:graphics::abline(v=stats::qnorm(0.025, lower.tail=F), col="red")
1640011963698:graphics::abline(v=stats::qnorm(0.025), col="red")
1640011998164:x_ave_lower = data_ave - stats::qnorm(0.025, lower.tail=F) * sqrt(data_var)
1640012000754:x_ave_upper = data_ave + stats::qnorm(0.025, lower.tail=F) * sqrt(data_var)
1640012097212:x_ave_lower = data_ave - stats::qnorm(0.025, lower.tail=F) * sqrt(data_var / length(data))
1640012097776:x_ave_upper = data_ave + stats::qnorm(0.025, lower.tail=F) * sqrt(data_var / length(data))
1640012130618:# 描画
1640012130631:graphics::par(new=TRUE)
1640012131406:graphics::curve(dnorm(x, mean=data_ave, sd=sqrt(data_var)), from=-5, to=15)
1640012133379:graphics::curve(dnorm(x, mean=data_ave, sd=sqrt(data_var)), from=-5, to=15)
1640012134911:graphics::abline(v=x_ave_lower, col="red")
1640012135911:graphics::abline(v=x_ave_upper, col="red")
1640012471998:# 指定したt値の上側確率P(z>z値)
1640012472011:stats::pt(t, lower.tail=F)
1640012626621:?pt
1640012711471:# 指定したt値の上側確率P(z>z値)
1640012711482:stats::pt(t, df=length(data)-1, lower.tail=FALSE)
1640012831240:# 描画
1640012831252:graphics::par(new=TRUE)
1640012832566:graphics::curve(dt(x, df=length(data)-1), from=-5, to=5)
1640012835319:graphics::curve(dt(x, df=length(data)-1), from=-5, to=5)
1640012846544:graphics::abline(v=t, col="blue")
1640012860980:graphics::abline(v=stats::qt(0.025, lower.tail=FALSE), col="red")
1640012915122:?qt
1640012962598:graphics::abline(v=stats::qt(0.025, df=length(data)-1, lower.tail=FALSE), col="red")
1640012964091:graphics::abline(v=stats::qt(0.025, df=length(data)-1), col="red")
1640013196323:# 指定した上側確率に対応するt値（境界値）
1640013196336:stats::qt(0.025, df=length(data)-1, lower.tail=FALSE)
1640013287225:x_ave_lower = data_ave - stats::qt(0.025, df=length(data)-1, lower.tail=FALSE) * sqrt(data_var.s/length(data))
1640013289141:x_ave_upper = data_ave + stats::qt(0.025, df=length(data)-1, lower.tail=FALSE) * sqrt(data_var.s/length(data))
1640013347652:# 描画
1640013347664:graphics::par(new=TRUE)
1640013409610:graphics::curve(dt(x, df=length(data)-1), from=-5, to=15)
1640013412524:graphics::curve(dt(x, df=length(data)-1), from=-5, to=15)
1640013453095:graphics::curve(dt(x, df=length(data)-1), from=-5, to=5)
1640013525591:?dnorm
1640013733945:graphics::curve(dnorm(x, mean=0, sd=1), from=-5, to=5)
1640013750326:graphics::curve(dnorm(x, mean=data_ave, sd=sqrt(data_var)), from=-5, to=15)
1640013757517:graphics::abline(v=x_ave_lower, col="red")
1640013758937:graphics::abline(v=x_ave_upper, col="red")
1640013832447:# 指定した上側確率に対応するt値（境界値）
1640013832457:stats::qt(0.025, df=length(data)-1, lower.tail=FALSE)
1640014241270:# H0：σ^2=2.0^2 のとき、χ^2値の算出
1640014241282:X2 = sum((data-data_ave)^2)/(2)^2
1640014390205:?pchai
1640014396692:?pkai
1640014531486:# 指定したχ^2値の上側確率P(χ^2>χ^2値)
1640014531499:stats::pchisq(X2, df=length(data)-1, lower.tail=FALSE)
1640014560486:# 指定した上側確率に対応するt値（境界値）
1640014560498:stats::qchisq(0.05, df=length(data)-1, lower.tail=FALSE)
1640015033603:# 描画
1640015033616:graphics::par(new=TRUE)
1640015034584:graphics::curve(dchisq(x, df=length(data)-1), from=-5, to=5)
1640015037579:graphics::curve(dchisq(x, df=length(data)-1), from=-5, to=5)
1640015044772:graphics::curve(dchisq(x, df=length(data)-1), from=-5, to=10)
1640015054860:graphics::curve(dchisq(x, df=length(data)-1), from=0, to=15)
1640015059056:graphics::curve(dchisq(x, df=length(data)-1), from=0, to=20)
1640015062581:graphics::curve(dchisq(x, df=length(data)-1), from=0, to=30)
1640015085379:graphics::abline(v=X2, col="blue")
1640015107996:graphics::abline(v=stats::qchisq(0.05, df=length(data)-1, lower.tail=FALSE), col="red")
1640015245765:# 指定した上側確率に対応するt値（境界値）
1640015245777:stats::qchisq(0.05, df=length(data)-1, lower.tail=FALSE)
1640015456379:mu_lower = data_ave - stats::qt(0.025, df=length(data)-1, lower.tail=FALSE) * sqrt(data_var.s/length(data))
1640015457287:mu_upper = data_ave + stats::qt(0.025, df=length(data)-1, lower.tail=FALSE) * sqrt(data_var.s/length(data))
1640015472090:# 描画
1640015472103:graphics::par(new=TRUE)
1640015472757:graphics::curve(dnorm(x, mean=data_ave, sd=sqrt(data_var)), from=-5, to=15)
1640015474031:graphics::curve(dnorm(x, mean=data_ave, sd=sqrt(data_var)), from=-5, to=15)
1640015475047:graphics::abline(v=mu_lower, col="red")
1640015475592:graphics::abline(v=mu_upper, col="red")
1640015503614:# 描画
1640015503627:graphics::par(new=TRUE)
1640015504074:graphics::curve(dnorm(x, mean=data_ave, sd=sqrt(data_var.s)), from=-5, to=15)
1640015505286:graphics::curve(dnorm(x, mean=data_ave, sd=sqrt(data_var.s)), from=-5, to=15)
1640015506571:graphics::abline(v=mu_lower, col="red")
1640015507032:graphics::abline(v=mu_upper, col="red")
1640015713375:sigmasq_upper = stats::qchisq(0.05, df=length(data)-1, lower.tail=FALSE)/sum((data-data.ave)^2)
1640015721327:sigmasq_upper = stats::qchisq(0.05, df=length(data)-1, lower.tail=FALSE)/sum((data-data_ave)^2)
1640015863247:# 指定した上側確率に対応するχ^2値（境界値）
1640015863259:stats::qchisq(0.025, df=length(data)-1, lower.tail=FALSE)
1640015886363:# 描画
1640015886374:graphics::par(new=TRUE)
1640015887363:graphics::curve(dchisq(x, df=length(data)-1), from=0, to=30)
1640015889685:graphics::curve(dchisq(x, df=length(data)-1), from=0, to=30)
1640015890829:graphics::abline(v=X2, col="blue")
1640015892148:graphics::abline(v=stats::qchisq(0.025, df=length(data)-1, lower.tail=FALSE), col="red")
1640015892852:graphics::abline(v=stats::qchisq(0.975, df=length(data)-1, lower.tail=FALSE), col="red")
1640015951908:sigmasq_upper = stats::qchisq(0.025, df=length(data)-1, lower.tail=FALSE)/sum((data-data_ave)^2)
1640015952592:sigmasq_lower = stats::qchisq(0.975, df=length(data)-1, lower.tail=FALSE)/sum((data-data_ave)^2)
1640016028787:# 指定したχ^2値の上側確率P(χ^2>χ^2値)
1640016028801:stats::pchisq(X2, df=length(data)-1, lower.tail=FALSE)
1640016073087:# H0：σ^2=2.0^2 のとき、χ^2値の算出
1640016073100:X2 = sum((data-data_ave)^2)/(2)^2
1640016101930:stats::qchisq(0.925, df=length(data)-1, lower.tail=FALSE)
1640016106675:stats::qchisq(0.975, df=length(data)-1, lower.tail=FALSE)
1640016108352:# 指定した上側確率に対応するχ^2値（境界値）
1640016108367:stats::qchisq(0.025, df=length(data)-1, lower.tail=FALSE)
1640016125760:# 指定した上側確率に対応するχ^2値（境界値）
1640016125772:stats::qchisq(0.975, df=length(data)-1)
1640016127066:stats::qchisq(0.025, df=length(data)-1, lower.tail=FALSE)
1640016150093:# 指定した下側・上側確率に対応するχ^2値（境界値）
1640016150105:stats::qchisq(0.025, df=length(data)-1)
1640016151256:stats::qchisq(0.025, df=length(data)-1, lower.tail=FALSE)
1640016194283:# 描画
1640016194295:graphics::par(new=TRUE)
1640016194852:graphics::curve(dchisq(x, df=length(data)-1), from=0, to=30)
1640016195966:graphics::curve(dchisq(x, df=length(data)-1), from=0, to=30)
1640016197333:graphics::abline(v=X2, col="blue")
1640016199481:graphics::abline(v=stats::qchisq(0.025, df=length(data)-1, lower.tail=FALSE), col="red")
1640016200165:graphics::abline(v=stats::qchisq(0.025, df=length(data)-1), col="red")
1640016281938:sigmasq_upper = stats::qchisq(0.025, df=length(data)-1, lower.tail=FALSE)/sum((data-data_ave)^2)
1640016283683:sigmasq_lower = stats::qchisq(0.025, df=length(data)-1)/sum((data-data_ave)^2)
1640016339479:# 指定した下側・上側確率に対応するχ^2値（境界値）
1640016339492:stats::qchisq(0.025, df=length(data)-1)
1640016339835:stats::qchisq(0.025, df=length(data)-1, lower.tail=FALSE)
1640016416452:stats::qchisq(0.025, df=length(data)-1, lower.tail=FALSE)
1640016457910:sigmasq_upper = sum((data-data_ave)^2)/stats::qchisq(0.025, df=length(data)-1)
1640016484673:sigmasq_lower = sum((data-data_ave)^2)/stats::qchisq(0.025, df=length(data)-1, lower.tail=FALSE)
1640087424422:x1 = c(5, 6, 4, 8, 7, 3, 6, 4, 5)
1640087513239:x2 = c(8, 9, 6, 10, 12, 8, 7, 9)
1640095916016:x1_ave = ave(x1)
1640095936781:x1_ave = mean(x1)
1640095953725:x2_ave = mean(x2)
1640095976821:x1_sd = sd(x1)
1640095991456:x2_sd = sd(x1)
1640095994149:x2_sd = sd(x2)
1640096008941:?sd
1640096033169:x1_sd = stat::sd(x1)
1640096034817:x2_sd = stat::sd(x2)
1640096041128:x1_sd = stats::sd(x1)
1640096048338:x2_sd = stats::sd(x2)
1640099001684:# 母集団標準偏差σの推定量
1640099001697:s = sqrt((length(x1)*(x1_sd)^2+length(x2)*(x2_sd)^2)/(length(x1)+length(x2)-2))
1640099155618:# 平均差の標本分布の統計量
1640099155632:# 平均
1640099155646:mu12 = x1_ave - x2_ave
1640099341172:# 母集団標準偏差σの推定量
1640099341184:sigma = sqrt((length(x1)*(x1_sd)^2+length(x2)*(x2_sd)^2)/(length(x1)+length(x2)-2))
1640099343791:# 平均差の標本分布の統計量
1640099343804:# 平均
1640099343817:mu12 = x1_ave - x2_ave
1640099345417:# 標準偏差
1640099345431:s = sigma * sqrt((1/length(x1))+(1/length(x2)))
1640099408113:# 平均差の標本分布の統計量
1640099408125:# 平均
1640099408138:x12_ave = x1_ave - x2_ave
1640099409546:# 標準偏差
1640099409557:s = sigma * sqrt((1/length(x1))+(1/length(x2)))
1640099543838:# 平均差の標本分布の標準偏差
1640099543851:s = sigma * sqrt((1/length(x1))+(1/length(x2)))
1640099545698:# H0:μ1=μ2のとき、t値の算出
1640099545710:t = x12_ave / s
1640099667644:# 指定したt値の上側確率P(t>t値)
1640099667658:stats::pt(t, df=length(x1)+length(x2)-2, lower.tail=FALSE)
1640099683908:# 指定した上側確率に対応するt値（境界値）
1640099683920:stats::qt(0.025, df=length(x1)+length(x2)-2, lower.tail=FALSE)
1640099738081:# 指定した上側確率に対応するt値（境界値）
1640099738094:stats::qt(0.025, df=length(x1)+length(x2)-2)
1640099739179:stats::qt(0.025, df=length(x1)+length(x2)-2, lower.tail=FALSE)
1640099807240:# 描画
1640099807253:graphics::par(new=TRUE)
1640099827734:graphics::curve(dt(x, df=length(x1)+length(x2)-2), from=-5, to=5)
1640099830320:graphics::curve(dt(x, df=length(x1)+length(x2)-2), from=-5, to=5)
1640099835722:graphics::abline(v=t, col="blue")
1640099869883:graphics::abline(v=stats::qt(0.025, df=length(data)-1, lower.tail=FALSE), col="red")
1640099906630:graphics::abline(v=stats::qt(0.025, df=length(x1)+length(x2)-2, lower.tail=FALSE), col="red")
1640099908142:graphics::abline(v=stats::qt(0.025, df=length(x1)+length(x2)-2), col="red")
1640100165011:mu12_lower = x12_ave - stats::qt(0.025, df=length(x1)+length(x2)-2, lower.tail=FALSE) * s
1640100167628:mu12_upper = x12_ave + stats::qt(0.025, df=length(x1)+length(x2)-2, lower.tail=FALSE) * s
1640100467040:# 母集団標準偏差σの推定量
1640100467053:sigma = sqrt((length(x1)*((x1_sd)^2)+length(x2)*((x2_sd)^2))/(length(x1)+length(x2)-2))
1640100596437:# 平均差の標本分布の標準偏差
1640100596450:s12 = sigma / sqrt((1/length(x1))+(1/length(x2)))
1640100602740:# H0:μ1=μ2のとき、t値の算出
1640100602754:t = x12_ave / s12
1640100648668:# 平均差の標本分布の標準偏差
1640100648682:s12 = sigma * sqrt((1/length(x1))+(1/length(x2)))
1640100649763:# H0:μ1=μ2のとき、t値の算出
1640100649775:t = x12_ave / s12
1640100825383:x1_sd = sqrt(sum((x1-x1_ave)^2)/length(x1))
1640100826128:x2_sd = sqrt(sum((x2-x2_ave)^2)/length(x2))
1640100841797:# 母集団標準偏差σの推定量
1640100841810:sigma = sqrt((length(x1)*((x1_sd)^2)+length(x2)*((x2_sd)^2))/(length(x1)+length(x2)-2))
1640100847667:# 平均差の標本分布の平均
1640100847680:x12_ave = x1_ave - x2_ave
1640100855408:# 平均差の標本分布の標準偏差
1640100855421:s12 = sigma * sqrt((1/length(x1))+(1/length(x2)))
1640100857249:# H0:μ1=μ2のとき、t値の算出
1640100857263:t = x12_ave / s12
1640100873222:# 指定したt値の上側確率P(t>t値)
1640100873234:stats::pt(t, df=length(x1)+length(x2)-2, lower.tail=FALSE)
1640100876705:# 指定した上側確率に対応するt値（境界値）
1640100876718:stats::qt(0.025, df=length(x1)+length(x2)-2)
1640100877550:stats::qt(0.025, df=length(x1)+length(x2)-2, lower.tail=FALSE)
1640100878872:# 描画
1640100878887:graphics::par(new=TRUE)
1640100879764:graphics::curve(dt(x, df=length(x1)+length(x2)-2), from=-5, to=5)
1640100881754:graphics::curve(dt(x, df=length(x1)+length(x2)-2), from=-5, to=5)
1640100883244:graphics::abline(v=t, col="blue")
1640100884072:graphics::abline(v=stats::qt(0.025, df=length(x1)+length(x2)-2, lower.tail=FALSE), col="red")
1640100884965:graphics::abline(v=stats::qt(0.025, df=length(x1)+length(x2)-2), col="red")
1640101010504:# 指定したt値の上側確率P(t>t値)
1640101010517:stats::pt(t, df=length(x1)+length(x2)-2, lower.tail=FALSE)
1640101017821:t
1640101096837:# 指定した上側確率に対応するt値（境界値）
1640101096850:stats::qt(0.025, df=length(x1)+length(x2)-2)
1640101180529:# 指定したt値の下側確率P(t<t値)
1640101180542:stats::pt(t, df=length(x1)+length(x2)-2)
1640101198296:# 指定した下側確率に対応するt値（境界値）
1640101198307:stats::qt(0.05, df=length(x1)+length(x2)-2)
1640101237372:# 指定した上側確率に対応するt値（境界値）
1640101237385:stats::qt(0.025, df=length(x1)+length(x2)-2)
1640101238344:stats::qt(0.025, df=length(x1)+length(x2)-2, lower.tail=FALSE)
1640101326538:x1 = c(5, 6, 4, 8, 7, 3, 6, 4, 5)
1640101328334:x2 = c(8, 9, 6, 10, 12, 8, 7, 9)
1640101331018:x1_ave = mean(x1)
1640101332068:x2_ave = mean(x2)
1640101338720:x1_sd = sqrt(sum((x1-x1_ave)^2)/length(x1))
1640101340226:x2_sd = sqrt(sum((x2-x2_ave)^2)/length(x2))
1640101344811:# 母集団標準偏差σの推定量
1640101344825:sigma = sqrt((length(x1)*((x1_sd)^2)+length(x2)*((x2_sd)^2))/(length(x1)+length(x2)-2))
1640102037173:x1 = c(5, 6, 4, 8, 7, 3, 6, 4, 5)
1640102037636:x2 = c(8, 9, 6, 10, 12, 8, 7, 9)
1640102038464:x1_ave = mean(x1)
1640102039294:x2_ave = mean(x2)
1640102040386:x1_sd = sqrt(sum((x1-x1_ave)^2)/length(x1))
1640102041438:x2_sd = sqrt(sum((x2-x2_ave)^2)/length(x2))
1640102043373:# 平均差の標本分布の平均
1640102043386:x12_ave = x1_ave - x2_ave
1640102045701:# 母分散が等しい二つの標本の平均差の母集団標準偏差σ(1-2)の推定量
1640102045714:sigma12 = sqrt((length(x1)*((x1_sd)^2)+length(x2)*((x2_sd)^2))/(length(x1)+length(x2)-2))
1640102051285:# 平均差の標本分布の標準偏差
1640102051299:s12 = sigma12 * sqrt((1/length(x1))+(1/length(x2)))
1640102077532:# H0:μ1=μ2のとき、t0値の算出
1640102077545:t0 = x12_ave / s12
1640102079476:# 指定したt値の上側確率P(t>t値)
1640102079488:stats::pt(t0, df=length(x1)+length(x2)-2, lower.tail=FALSE)
1640102081458:# 指定した上側確率に対応するt値（境界値）
1640102081471:stats::qt(0.025, df=length(x1)+length(x2)-2)
1640102082489:stats::qt(0.025, df=length(x1)+length(x2)-2, lower.tail=FALSE)
1640102085480:# 描画
1640102085492:graphics::par(new=TRUE)
1640102090380:graphics::curve(dt(x, df=length(x1)+length(x2)-2), from=-5, to=5)
1640102092669:graphics::abline(v=t0, col="blue")
1640102095966:graphics::abline(v=stats::qt(0.025, df=length(x1)+length(x2)-2, lower.tail=FALSE), col="red")
1640102097163:graphics::abline(v=stats::qt(0.025, df=length(x1)+length(x2)-2), col="red")
1640102233536:mu12_lower = x12_ave - stats::qt(0.025, df=length(x1)+length(x2)-2, lower.tail=FALSE) * s12
1640102234816:mu12_upper = x12_ave + stats::qt(0.025, df=length(x1)+length(x2)-2, lower.tail=FALSE) * s12
1640185528232:x1 = c(6, 5, 8, 7, 3, 4, 5, 6, 7, 4)
1640185528570:x2 = c(2, 8, 4, 12, 6, 13, 4, 1, 10, 8, 5)
1640185806279:x1_ave = mean(x1)
1640185807796:x2_ave = mean(x2)
1640185829353:x1_sd = sqrt(sum((x1-x1_ave)^2)/length(x1))
1640185833097:x2_sd = sqrt(sum((x2-x2_ave)^2)/length(x2))
1640185887058:x1_var = sum((x1-x1_ave)^2)/length(x1)
1640185887884:x2_var = sum((x2-x2_ave)^2)/length(x2)
1640186181972:kaisq1 = (1/x1_var) * sum((x1-x1_ave)^2)
1640186208296:kaisq2 = (1/x2_var) * sum((x2-x2_ave)^2)
1640186625529:F0 = var(x1) / var(x2)
1640186672658:?pf
1640186718124:# 指定したt値の上側確率P(t>t値)
1640186718136:stats::pf(F0, df1=length(x1)-1, df2=length(x2)-1, lower.tail=FALSE)
1640186910253:# 指定した上側確率に対応するF値（境界値）
1640186910266:stats::qt(0.025, df1=length(x1)-1, df2=length(x2)-1)
1640186917368:# 指定した上側確率に対応するF値（境界値）
1640186917383:stats::qt(0.025, df1=length(x1)-1, df2=length(x2)-1)
1640186924226:# 指定した上側確率に対応するF値（境界値）
1640186924239:stats::qf(0.025, df1=length(x1)-1, df2=length(x2)-1)
1640186925033:stats::qf(0.025, df1=length(x1)-1, df2=length(x2)-1, lower.tail=FALSE)
1640186949623:# 描画
1640186949635:graphics::par(new=TRUE)
1640187002068:graphics::curve(df(x, , df1=length(x1)-1, df2=length(x2)-1, from=0, to=5))
1640187015862:graphics::curve(df(x, df1=length(x1)-1, df2=length(x2)-1, from=0, to=5))
1640187032999:?df
1640187057473:graphics::curve(df(x, df1=length(x1)-1, df2=length(x2)-1))
1640187065576:?df
1640187120718:graphics::abline(v=F0, col="blue")
1640187147157:graphics::abline(v=stats::qf(0.025, df1=length(x1)-1, df2=length(x2)-1, lower.tail=FALSE), col="red")
1640187158014:stats::qf(0.025, df1=length(x1)-1, df2=length(x2)-1, lower.tail=FALSE)
1640187305914:graphics::curve(df(x, df1=length(x1)-1, df2=length(x2)-1), from=0, to=5)
1640187309294:graphics::abline(v=F0, col="blue")
1640187310861:graphics::abline(v=stats::qf(0.025, df1=length(x1)-1, df2=length(x2)-1, lower.tail=FALSE), col="red")
1640187334362:graphics::abline(v=stats::qf(0.025, df1=length(x1)-1, df2=length(x2)-1), col="red")
1640187396875:# 指定したt値の上側確率P(F>F0)
1640187396887:stats::pf(F0, df1=length(x1)-1, df2=length(x2)-1, lower.tail=FALSE)
1640187432440:# 指定した上側確率に対応するF値（境界値）
1640187432453:stats::qf(0.025, df1=length(x1)-1, df2=length(x2)-1)
1640187456314:F0 = var(x1) / var(x2)
1640188103578:x1_var.s = var(x1)
1640188114896:x2_var.s = var(x2)
1640188296873:F0 = var(x2) / var(x1)
1640188321130:# 指定したt値の上側確率P(F>F0)
1640188321144:stats::pf(F0, df1=length(x2)-1, df2=length(x1)-1, lower.tail=FALSE)
1640188353606:# 指定した上側確率に対応するF値（境界値）
1640188353618:stats::qf(0.025, df1=length(x2)-1, df2=length(x1)-1)
1640188355282:stats::qf(0.025, df1=length(x2)-1, df2=length(x1)-1, lower.tail=FALSE)
1640188382332:graphics::curve(df(x, df1=length(x2)-1, df2=length(x1)-1), from=0, to=5)
1640188386921:graphics::abline(v=F0, col="blue")
1640188392143:graphics::abline(v=F0, col="blue")
1640188393720:# 描画
1640188393733:graphics::par(new=TRUE)
1640188394394:graphics::curve(df(x, df1=length(x2)-1, df2=length(x1)-1), from=0, to=5)
1640188394955:graphics::abline(v=F0, col="blue")
1640188403226:graphics::curve(df(x, df1=length(x2)-1, df2=length(x1)-1), from=0, to=7)
1640188404821:graphics::abline(v=F0, col="blue")
1640188422481:graphics::abline(v=stats::qf(0.025, df1=length(x1)-1, df2=length(x2)-1, lower.tail=FALSE), col="red")
1640188423659:graphics::abline(v=stats::qf(0.025, df1=length(x1)-1, df2=length(x2)-1), col="red")
1640188472949:stats::qf(0.025, df1=length(x2)-1, df2=length(x1)-1, lower.tail=FALSE)
1640188521314:stats::qf(0.025, df1=length(x2)-1, df2=length(x1)-1, lower.tail=FALSE)
1640190265408:# 指定したt値の上側確率P(F>F0)
1640190265421:stats::pf(F0, df1=length(x2)-1, df2=length(x1)-1, lower.tail=FALSE)
1640190487808:# 指定した下側確率に対応するF値（境界値）
1640190487820:stats::qf(0.025, df1=length(x2)-1, df2=length(x1)-1)
1640190509613:stats::qf(0.975, df1=length(x2)-1, df2=length(x1)-1, lower.tail=FALSE)
1640190769549:sigmasq12_lower = (var(x1)/var(x2)) * stats::qf(0.025, df1=length(x2)-1, df2=length(x1)-1)
1640190770911:sigmasq12_upper = (var(x1)/var(x2)) * stats::qf(0.025, df1=length(x2)-1, df2=length(x1)-1, , lower.tail=FALSE)
1640191395270:X2 = sum((data-data_ave)^2)/(2)^2
1640360734316:x = c(2, 5, 6, 4, 8, 6, 2, 4, 2, 3, 1, 2)
1640360765967:y = c(5, 7, 7, 6, 12, 9, 4, 8, 5, 4, 5, 4)
1640360792420:df = data.frame(x=x, y=y)
1640360796034:df
1640360852109:r = cor(df)
1640360858773:r
1640360876929:?cor
1640360884316:r = stats::cor(df)
1640360885785:r
1640360896067:?cor.test
1640360955407:cor.test(df)
1640360963839:cor.test(df$x, df$y)
1640362092997:stats::cor.test(df$x, df$y)
1640362453506:t0 = (r / sqrt(1-r^2)) * sqrt(length(df$x)-2)
1640362464893:t0
1640362490993:r
1640362575886:r = stats::cor(df$x, df$y)
1640362577357:r
1640362579413:t0 = (r / sqrt(1-r^2)) * sqrt(length(df$x)-2)
1640362581409:t0
1640362631289:length(df$x)
1640362708846:# 指定した下側（上側）確率に対応するt値（境界値）
1640362708860:stats::qt(0.025, df=length(df$x)-2)
1640362709515:stats::qt(0.025, df=length(df$x)-2, lower.tail=FALSE)
1640362755068:# 帰無分布の描画
1640362755082:graphics::par(new=TRUE)
1640362766204:graphics::curve(dt(x, df=length(df$x)-2), from=-5, to=5)
1640362771101:graphics::abline(v=t0, col="blue")
1640362782112:graphics::curve(dt(x, df=length(df$x)-2), from=-7, to=7)
1640362783775:graphics::abline(v=t0, col="blue")
1640362805368:graphics::abline(v=stats::qt(0.025, df=length(df$x)-2, lower.tail=FALSE), col="red")
1640362806164:graphics::abline(v=stats::qt(0.025, df=length(df$x)-2, col="red")
1640362820758:graphics::abline(v=stats::qt(0.025, df=length(df$x)-2), col="red")
1640362827313:graphics::abline(v=stats::qt(0.025, df=length(df$x)-2), col="red")
1640362882043:# H0:rho=0のとき、t0の算出
1640362882057:t0 = (r / sqrt(1-r^2)) * sqrt(length(df$x)-2)
1640362886138:t0
1640362922734:# 指定した下側（上側）確率に対応するt値（境界値）
1640362922747:stats::qt(0.025, df=length(df$x)-2)
1640363492596:# 別解
1640363492610:# H0:rho=0のとき、rは自由度N-2=10のr分布に従う。
1640363492623:# 指定した下側（上側）確率に対応するr値（境界値）
1640363492637:stats::qr(0.025, df=length(df$x)-2)
1640363814564:dt(x, df=length(df$x)-2)
1640364387489:graphics::abline(v=stats::qt(0.025, df=length(df$x)-2), col="red")
1640364390732:graphics::abline(v=stats::qt(0.025, df=length(df$x)-2), col="red")
1640364395222:graphics::abline(v=stats::qt(0.025, df=length(df$x)-2), col="red")
1640364398728:?atanh
1640364554196:# ρ≠0のとき、rをフィッシャーのz変換した値、z=atanh(r)は平均ζ、分散1/N-3の正規分布に近似的に従う
1640364554210:# このとき、ζ=atanh(ρ)=(1/2)*log((1+ρ)/(1-ρ))
1640364554224:z = atanh(r)
1640365553474:qnorm(0.025, lower.tail=FALSE)
1640365639446:rho_lower = tanh(z - stats::qnorm(0.025, lower.tail=FALSE) / sqrt(length(df$x)-3))
1640365652277:rho_lower = tanh(z + stats::qnorm(0.025, lower.tail=FALSE) / sqrt(length(df$x)-3))
1640365659599:rho_lower = tanh(z + stats::qnorm(0.025, lower.tail=FALSE) / sqrt(length(df$x)-3))
1640365670011:rho_lower = tanh(z - stats::qnorm(0.025, lower.tail=FALSE) / sqrt(length(df$x)-3))
1640365670578:rho_upper = tanh(z + stats::qnorm(0.025, lower.tail=FALSE) / sqrt(length(df$x)-3))
1640365859515:stats::cor.test(df$x, df$y)
1640427043772:tbl = matrix(c(10, 20, 20, 30, 10, 10), nrow=2, ncol=3)
1640427046143:tbl
1640427058415:?matrix
1640427079243:tbl = matrix(c(10, 20, 20, 30, 10, 10), nrow=2, ncol=3, byrow=TRUE)
1640427082318:tbl
1640427155490:tbl = matrix(c(10, 20, 20, 30, 10, 10), nrow=2, ncol=3, byrow=TRUE,
1640427155505:colnames=c("A", "B", "C"))
1640427286836:tbl = matrix(c(10, 20, 20, 30, 10, 10), nrow=2, ncol=3, byrow=TRUE)
1640427287779:colnames(tbl) = c("A", "B", "C")
1640427290756:tbl
1640427298578:tbl
1640427724440:chisq.test(tbl, correct=FALSE)
1640427764839:rownames(tbl) = c(1, 2)
1640427766304:tbl
1640427774685:rownames(tbl) = c("1", "2")
1640427775226:tbl
1640427776815:chisq.test(tbl, correct=FALSE)
1640428450232:soudosu = sum(tbl)
1640428453919:soudosu
1640428525569:?sumrow
1640428536891:?sumRow
1640428542157:?sumRows
1640438610194:syuhendosu_row = rowSums(tbl)
1640438614021:syuhendosu_row
1640438620181:soudosu
1640438651964:syuhendosu_colum = colSums(tbl)
1640438660873:syuhendosu_column = colSums(tbl)
1640438664905:syuhendosu_column
1640438828320:tbl = matrix(c(10, 20, 20, 30, 10, 10), nrow=2, ncol=3, byrow=TRUE)
1640438829502:colnames(tbl) = c("A", "B", "C")
1640438830268:rownames(tbl) = c("1", "2")
1640438832180:tbl
1640438837462:chisq.test(tbl, correct=FALSE)
1640438839007:total_freq = sum(tbl)
1640438841823:marginal_freq_row = rowSums(tbl)
1640438842936:marginal_freq_column = colSums(tbl)
1640439013860:marginal_freq_row
1640439020287:marginal_freq_column
1640439023420:total_freq
1640439321803:marginal_freq_row[1]
1640439341092:marginal_freq_row[1] * marginal_freq_column[1]
1640439357198:marginal_freq_row[1] * marginal_freq_column[1] / total_freq
1640439395526:i = 1
1640439396671:marginal_freq_row[i] * marginal_freq_column[i] / total_freq
1640439421685:i = 1
1640439422102:j = 1
1640439422642:marginal_freq_row[i] * marginal_freq_column[j] / total_freq
1640439740672:vec = c()
1640439744336:expected_freq = marginal_freq_row[i] * marginal_freq_column[j] / total_freq
1640439746319:append(vec, expected_freq)
1640439770838:vec = append(vec, expected_freq)
1640439794274:for (i in 1:2){
1640439794287:for (j in 1:3){
1640439794299:vec = c()
1640439794311:expected_freq = marginal_freq_row[i] * marginal_freq_column[j] / total_freq
1640439794324:vec = append(vec, expected_freq)
1640439794337:}
1640439794351:}
1640439799951:vec
1640439889523:vec = c()
1640439891134:for (i in 1:2){
1640439891146:for (j in 1:3){
1640439891158:expected_freq = marginal_freq_row[i] * marginal_freq_column[j] / total_freq
1640439891170:vec = append(vec, expected_freq)
1640439891183:}
1640439891196:}
1640439892957:vec
1640439911015:marginal_freq_column
1640439963086:tbl_expected = matrix(vec, nrow=2, ncol=3, byrow=TRUE)
1640439966918:tbl_expected
1640439990603:rm(i, j, vec)
1640440309662:# カイ二乗要素の計算
1640440309675:tbl_chisq = (tbl - tbl_expected)^2 / tbl_expected
1640440312141:tbl_chisq
1640440487660:# χ^2_0の計算
1640440487671:chisq0 = sum(tbl_chisq)
1640440491065:chisq0
1640440767500:# 指定した下側・上側確率に対応するχ^2値（境界値）
1640440767512:stats::qchisq(0.025, df=length(data)-1)
1640440793740:# 指定した下側・上側確率に対応するχ^2値（境界値）
1640440793756:stats::qchisq(0.025, df=nrow(tbl)*ncol(tbl))
1640440795028:stats::qchisq(0.025, df=nrow(tbl)*ncol(tbl), lower.tail=FALSE)
1640440814405:# 描画
1640440814420:graphics::par(new=TRUE)
1640440827525:graphics::curve(dchisq(x, df=nrow(tbl)*ncol(tbl), from=0, to=30)
1640440835750:graphics::curve(dchisq(x, df=nrow(tbl)*ncol(tbl)), from=0, to=30)
1640440841130:graphics::curve(dchisq(x, df=nrow(tbl)*ncol(tbl)), from=0, to=30)
1640440857692:graphics::abline(v=chisq0, col="blue")
1640440904081:graphics::abline(v=stats::qchisq(0.025, df=nrow(tbl)*ncol(tbl)), col="red")
1640440904979:graphics::abline(v=stats::qchisq(0.025, df=nrow(tbl)*ncol(tbl), lower.tail=FALSE), col="red")
1640441031094:stats::qchisq(0.05, df=nrow(tbl)*ncol(tbl), lower.tail=FALSE)
1640441063347:graphics::abline(v=stats::qchisq(0.05, df=nrow(tbl)*ncol(tbl), lower.tail=FALSE), col="red")
1640441066293:# 描画
1640441066307:graphics::par(new=TRUE)
1640441067620:graphics::curve(dchisq(x, df=nrow(tbl)*ncol(tbl)), from=0, to=30)
1640441069076:graphics::curve(dchisq(x, df=nrow(tbl)*ncol(tbl)), from=0, to=30)
1640441072105:graphics::abline(v=chisq0, col="blue")
1640441073042:graphics::abline(v=stats::qchisq(0.05, df=nrow(tbl)*ncol(tbl), lower.tail=FALSE), col="red")
1640441114235:chisq.test(tbl, correct=FALSE)
1640441170635:# 指定した上側確率に対応するχ^2値（境界値）
1640441170647:stats::qchisq(0.05, df=(nrow(tbl)-1)*(ncol(tbl)-1), lower.tail=FALSE)
1640441172616:# 描画
1640441172628:graphics::par(new=TRUE)
1640441174918:graphics::curve(dchisq(x, df=(nrow(tbl)-1)*(ncol(tbl)-1), from=0, to=30)
1640441176589:graphics::curve(dchisq(x, df=(nrow(tbl)-1)*(ncol(tbl)-1), from=0, to=30)
1640441181357:graphics::curve(dchisq(x, df=(nrow(tbl)-1)*(ncol(tbl)-1)), from=0, to=30)
1640441183390:graphics::curve(dchisq(x, df=(nrow(tbl)-1)*(ncol(tbl)-1)), from=0, to=30)
1640441187340:graphics::abline(v=chisq0, col="blue")
1640441192028:graphics::abline(v=stats::qchisq(0.05, df=nrow(nrow(tbl)-1)*(ncol(tbl)-1), lower.tail=FALSE), col="red")
1640441197072:# 指定した上側確率に対応するχ^2値（境界値）
1640441197086:stats::qchisq(0.05, df=(nrow(tbl)-1)*(ncol(tbl)-1), lower.tail=FALSE)
1640441201995:graphics::abline(v=stats::qchisq(0.05, df=nrow(nrow(tbl)-1)*(ncol(tbl)-1), lower.tail=FALSE), col="red")
1640441210244:graphics::abline(v=stats::qchisq(0.05, df=(nrow(tbl)-1)*(ncol(tbl)-1), lower.tail=FALSE), col="red")
1640441212814:graphics::curve(dchisq(x, df=(nrow(tbl)-1)*(ncol(tbl)-1)), from=0, to=30)
1640441214202:graphics::abline(v=chisq0, col="blue")
1640441215490:graphics::abline(v=stats::qchisq(0.05, df=(nrow(tbl)-1)*(ncol(tbl)-1), lower.tail=FALSE), col="red")
1640441681004:# クラメールの連関係数の計算
1640441681018:library(vcd)
1640441709905:?vcd
1640441721588:??vcd
1640441799572:vcd::assocstats(tbl)
1640443014221:# V = sqrt(χ^2/(min(a, b)-1)*N)
1640443014233:V = sqrt(chisq0/((min(nrow(tbl), ncol(tbl))-1) * total_freq))
1640443016124:V
1640443091752:# 指定した上側確率に対応するχ^2値（境界値）
1640443091765:stats::qchisq(0.05, df=(nrow(tbl)-1)*(ncol(tbl)-1), lower.tail=FALSE)
1640444862544:A1 = c(4, 5, 3)
1640444882534:A2 = c(6, 8, 6, 7, 8)
1640444893325:A3 = c(2, 3, 3, 2)
1640444947190:A1_sum = sum(A1)
1640444955501:sum(A1)
1640444965233:sum(A2)
1640444965611:sum(A3)
1640444980033:ave(A1)
1640444988106:mean(A1)
1640444997939:mean(A2)
1640445000477:mean(A3)
1640445107387:sqrt(sum((A1-mean(A1))^2)/length(A1))
1640445126696:sqrt(sum((A2-mean(A2))^2)/length(A2))
1640445127135:sqrt(sum((A3-mean(A3))^2)/length(A3))
1640445231974:sum(sum(A1), sum(A2), sum(A3))
1640445293737:sum(sum(A1), sum(A2), sum(A3))/sum(length(A1), length(A2), length(A3))
1640445459545:A1_sd = sqrt(sum((A1-mean(A1))^2)/length(A1))
1640445467736:A2_sd = sqrt(sum((A2-mean(A2))^2)/length(A2))
1640445472870:A3_sd = sqrt(sum((A3-mean(A3))^2)/length(A3))
1640445477069:T = sum(sum(A1), sum(A2), sum(A3))
1640445566275:T_ave = sum(sum(A1), sum(A2), sum(A3))/sum(length(A1), length(A2), length(A3))
1640445647908:SA = sum(length(A1)*((mean(A1)-T_ave)^2),
1640445647921:length(A2)*((mean(A2)-T_ave)^2),
1640445647939:length(A3)*((mean(A3)-T_ave)^2))
1640445753130:SE = sum(sum((A1-mean(A1))^2), sum((A2-mean(A2))^2), sum((A3-mean(A3))^2))
1640445848455:ST = sum(sum((A1-T_ave)^2), sum((A2-T_ave)^2), sum((A3-T_ave)^2))
1640445886874:ST
1640445888736:SE
1640445890942:SA
1640445989528:dfA =
1640445989540:dfE =
1640445989553:dfT = T - 1
1640446001527:dfT = T - 1
1640446029341:dfT = sum(length(A1), length(A2), length(A3) - 1
1640446035278:dfT = sum(length(A1), length(A2), length(A3) - 1
1640446047286:dfA =
1640446047297:dfE =
1640446047310:dfT = sum(length(A1), length(A2), length(A3)) - 1
1640446050893:dfT = sum(length(A1), length(A2), length(A3)) - 1
1640446083326:dfA = 3 - 1
1640446099501:dfE = sum(length(A1), length(A2), length(A3)) - 3
1640446246717:names(A1) = A1
1640446249992:A1
1640446259613:names(A1) = "A1"
1640446262983:A1
1640446272127:A1 = c(4, 5, 3)
1640446273454:A2 = c(6, 8, 6, 7, 8)
1640446273852:A3 = c(2, 3, 3, 2)
1640446278352:A1
1640446281247:A2
1640446283261:A3
1640446363169:list(A1=A1, A2=A2, A3=A3)
1640446382710:A_list = list(A1=A1, A2=A2, A3=A3)
1640446386795:A_list
1640446394071:data_list = list(A1=A1, A2=A2, A3=A3)
1640446399978:data_list
1640446460636:VA = SA/dfA
1640446462508:VA
1640446473709:VE = SE/dfE
1640446516289:F0 = VA/VE
1640446616165:sd = c(A1_sd, A2_sd, A3_sd)
1640446618630:sd
1640446641539:data_list
1640446686793:names(sd) = c("A1_sd", "A2_sd", "A3_sd")
1640446692449:sd
1640446747447:A1 = c(4, 5, 3)
1640446747926:A2 = c(6, 8, 6, 7, 8)
1640446748344:A3 = c(2, 3, 3, 2)
1640446748928:data_list = list(A1=A1, A2=A2, A3=A3)
1640446755268:T_ave = sum(sum(A1), sum(A2), sum(A3))/sum(length(A1), length(A2), length(A3))
1640446757109:SA = sum(length(A1)*((mean(A1)-T_ave)^2),
1640446757122:length(A2)*((mean(A2)-T_ave)^2),
1640446757135:length(A3)*((mean(A3)-T_ave)^2))
1640446757959:SE = sum(sum((A1-mean(A1))^2), sum((A2-mean(A2))^2), sum((A3-mean(A3))^2))
1640446758585:ST = sum(sum((A1-T_ave)^2), sum((A2-T_ave)^2), sum((A3-T_ave)^2))
1640446806764:SS_vec = c(SA, SE, ST)
1640446810296:SS_vec
1640446842792:names(SS_vec) = c("SA", "SE", "ST")
1640446853594:SS_vec
1640446911474:DF_vec = c(dfA, dfE, dfT)
1640446914461:dfA = 3 - 1
1640446914877:dfE = sum(length(A1), length(A2), length(A3)) - 3
1640446915295:dfT = sum(length(A1), length(A2), length(A3)) - 1
1640446915836:DF_vec = c(dfA, dfE, dfT)
1640446916991:names(DF_vec) = c("DFA", "DFE", "DFT")
1640446921715:DF_vec
1640446957082:VAR_vec = c(VA, VE)
1640446960206:VA = SA/dfA
1640446960682:VE = SE/dfE
1640446964815:VAR_vec = c(VA, VE)
1640447023251:Var_vec = c(VA, VE)
1640447023734:names(Var_vec) = c("VA", "VE")
1640447032626:names(Var_vec) = c("VarA", "VarE")
1640447037497:Var_vec
1640447045181:A1 = c(4, 5, 3)
1640447045520:A2 = c(6, 8, 6, 7, 8)
1640447045874:A3 = c(2, 3, 3, 2)
1640447046314:data_list = list(A1=A1, A2=A2, A3=A3)
1640447054110:data_list
1640447054988:T_ave = sum(sum(A1), sum(A2), sum(A3))/sum(length(A1), length(A2), length(A3))
1640447055817:SA = sum(length(A1)*((mean(A1)-T_ave)^2),
1640447055830:length(A2)*((mean(A2)-T_ave)^2),
1640447055843:length(A3)*((mean(A3)-T_ave)^2))
1640447056605:SE = sum(sum((A1-mean(A1))^2), sum((A2-mean(A2))^2), sum((A3-mean(A3))^2))
1640447057371:ST = sum(sum((A1-T_ave)^2), sum((A2-T_ave)^2), sum((A3-T_ave)^2))
1640447058096:SS_vec = c(SA, SE, ST)
1640447058926:names(SS_vec) = c("SA", "SE", "ST")
1640447059528:SS_vec
1640447061383:dfA = 3 - 1
1640447061964:dfE = sum(length(A1), length(A2), length(A3)) - 3
1640447062424:dfT = sum(length(A1), length(A2), length(A3)) - 1
1640447062924:DF_vec = c(dfA, dfE, dfT)
1640447063587:names(DF_vec) = c("DFA", "DFE", "DFT")
1640447064150:DF_vec
1640447066291:VA = SA/dfA
1640447067119:VE = SE/dfE
1640447067499:Var_vec = c(VA, VE)
1640447067957:names(Var_vec) = c("VarA", "VarE")
1640447068418:Var_vec
1640447072943:F0 = VA/VE
1640447279228:ANOVA_list = list(data=data_list, sum_of_squares=SS_vec, degree_of_freedom=DF_vec, varience=Var_vec, F0=F0)
1640447288142:ANOVA_list = list(data=data_list, sum_of_squares=SS_vec,
1640447288155:degree_of_freedom=DF_vec, varience=Var_vec, F0=F0)
1640447292765:ANOVA_list
1640448064236:# 指定した上側確率に対応するF値（境界値）
1640448064248:stats::qf(0.05, df1=2, df2=9, lower.tail=FALSE)
1640448067376:# 描画
1640448067390:graphics::par(new=TRUE)
1640448099225:graphics::curve(df(x, df1=2, df2=9), from=0, to=30)
1640448101873:graphics::curve(df(x, df1=2, df2=9), from=0, to=30)
1640448109348:graphics::abline(v=F0, col="blue")
1640448117474:graphics::curve(df(x, df1=2, df2=9), from=0, to=40)
1640448119212:graphics::abline(v=F0, col="blue")
1640448141421:graphics::abline(v=stats::qf(0.05, df1=2, df2=9, lower.tail=FALSE), col="red")
1640448230227:graphics::curve(df(x, df1=2, df2=9), from=0, to=35)
1640448231143:graphics::abline(v=F0, col="blue")
1640448231726:graphics::abline(v=stats::qf(0.05, df1=2, df2=9, lower.tail=FALSE), col="red")
1640448332905:ANOVA_list
1640448367909:ANOVA_list = list(data=data_list, sum_of_squares=SS_vec,
1640448367922:degree_of_freedom=DF_vec, variance=Var_vec, F0=F0)
1640448368940:ANOVA_list
1640448542314:rm(A1, A2, A3, data_list, T_ave, SA, SE, ST, SS_vec, dfA, dfE, dfT, DF_vec, VA, VE, Var_vec)
1640448546730:ANOVA_list
1640448556870:ANOVA_list[1]
1640448566519:ANOVA_list[2]
1640448571224:ANOVA_list[3]
1640448580246:ANOVA_list[1][1]
1640448596543:ANOVA_list[[1]]
1640448606116:ANOVA_list[1][1]
1640448610399:ANOVA_list[1][[1]]
1640448651480:ANOVA_list[2]
1640448716789:ANOVA_list$sum_of_squares
1640448726419:ANOVA_list$sum_of_squares$SA
1640448731771:ANOVA_list$sum_of_squares[1]
1640448743177:ANOVA_list[1][1]
1640448747062:ANOVA_list[2][1]
1640448761661:ANOVA_list[[2]][1]
1640448768414:ANOVA_list[[2]]
1640448773811:ANOVA_list[[2]][2]
1640451267174:knitr::opts_chunk$set(echo = TRUE)
1640451267500:?sd
1640454302583:mu_lower
1640454307698:# 母数の95％信頼区間の計算
1640454307721:(mu_lower = mean(x) - stats::qt(0.025, df=length(x)-1, lower.tail=FALSE) * sqrt(stats::sd(x)/length(x)))
1640454313750:# 母数の95％信頼区間の計算
1640454313775:(mu_lower = mean(x) - stats::qt(0.025, df=length(x)-1, lower.tail=FALSE) * sqrt(stats::sd(x)/length(x)))
1640454319307:# 母数の95％信頼区間の計算
1640454319330:(mu_lower = mean(x) - stats::qt(0.025, df=length(x)-1, lower.tail=FALSE) * sqrt(stats::sd(x)/length(x)))
1640454321110:# 母数の95％信頼区間の計算
1640454321124:(mu_lower = mean(x) - stats::qt(0.025, df=length(x)-1, lower.tail=FALSE) * sqrt(stats::sd(x)/length(x)))
1640454332918:# データ準備
1640454332931:x = c(3, 4, 2, 9, 6, 7, 5, 6, 5, 4)
1640454335243:# t0の計算
1640454335259:(t0 = (mean(x)-3)/sqrt(stats::sd(x)/length(x)))
1640454339793:# 上側確率2.5%に対応するt値(境界線)
1640454339811:stats::qt(0.025, df=length(x)-1, lower.tail=FALSE)
1640454343095:# 下側確率2.5%に対応するt値(境界線)
1640454343111:stats::qt(0.025, df=length(x)-1)
1640454349517:# 母数の95％信頼区間の計算
1640454349531:(mu_lower = mean(x) - stats::qt(0.025, df=length(x)-1, lower.tail=FALSE) * sqrt(stats::sd(x)/length(x)))
1640454365510:(mu_upper = mean(x) + stats::qt(0.025, df=length(x)-1, lower.tail=FALSE) * sqrt(stats::sd(x)/length(x)))
1640454595507:# t0の計算
1640454595522:(t0 = (mean(x)-3)/stats::sd(x)/sqrt(length(x)))
1640454600586:# 上側確率2.5%に対応するt値(境界線)
1640454600602:stats::qt(0.025, df=length(x)-1, lower.tail=FALSE)
1640454603129:# 下側確率2.5%に対応するt値(境界線)
1640454603142:stats::qt(0.025, df=length(x)-1)
1640454612968:graphics::par(new=TRUE)
1640454612986:graphics::curve(dt(x, df=length(x)-1), from=-5, to=5)
1640454613012:graphics::abline(v=t0, col="blue")
1640454613026:graphics::abline(v=stats::qt(0.025, df=length(x)-1, lower.tail=FALSE), col="red")
1640454613041:graphics::abline(v=stats::qt(0.025, df=length(x)-1), col="red")
1640454645223:# 母数の95％信頼区間の計算
1640454645238:(mu_lower = mean(x) - stats::qt(0.025, df=length(x)-1, lower.tail=FALSE) * sqrt(stats::sd(x)/length(x)))
1640454646356:(mu_upper = mean(x) + stats::qt(0.025, df=length(x)-1, lower.tail=FALSE) * sqrt(stats::sd(x)/length(x)))
1640454690542:# 母数の95％信頼区間の計算
1640454690557:(mu_lower = mean(x) - stats::qt(0.025, df=length(x)-1, lower.tail=FALSE) * stats::sd(x)/sqrt(length(x)))
1640454691562:(mu_upper = mean(x) + stats::qt(0.025, df=length(x)-1, lower.tail=FALSE) * stats::sd(x)/sqrt(length(x)))
1640454701309:# 母数の95％信頼区間の計算
1640454701324:(mu_lower = mean(x) - stats::qt(0.025, df=length(x)-1, lower.tail=FALSE) * stats::sd(x)/sqrt(length(x)))
1640454715906:(mu_upper = mean(x) + stats::qt(0.025, df=length(x)-1, lower.tail=FALSE) * stats::sd(x)/sqrt(length(x)))
1640454822662:# 上側確率2.5%に対応するt値(境界線)
1640454822676:stats::qt(0.025, df=length(x)-1, lower.tail=FALSE)
1640454824120:# 下側確率2.5%に対応するt値(境界線)
1640454824137:stats::qt(0.025, df=length(x)-1)
1640454867955:# t0の計算
1640454867965:(t0 = (mean(x)-3)/(stats::sd(x)/sqrt(length(x)))
1640454884914:# t0の計算
1640454884929:(t0 = (mean(x)-3)/(stats::sd(x)/sqrt(length(x))))
1640454887599:# t0の計算
1640454887613:(t0 = (mean(x)-3)/(stats::sd(x)/sqrt(length(x))))
1640454891971:# t0の計算
1640454891985:(t0 = (mean(x)-3)/(stats::sd(x)/sqrt(length(x))))
1640454895550:# t0の計算
1640454895565:(t0 = (mean(x)-3)/(stats::sd(x)/sqrt(length(x))))
1640454948392:# t0の計算
1640454948406:(t0 = (mean(x)-3)/(stats::sd(x)/sqrt(length(x))))
1640454953750:# t0の計算
1640454953765:(t0 = (mean(x)-3)/(stats::sd(x)/sqrt(length(x))))
1640454957777:(t0 = (mean(x)-3)/(stats::sd(x)/sqrt(length(x))))
1640454962059:# t0の計算
1640454962069:(t0 = (mean(x)-3)/(stats::sd(x)/sqrt(length(x))))
1640856096770:A = matrix(c(3, 1, 2, 2), nrow=2, ncol=2, byrow=TRUE)
1640856099487:A
1640856159187:B = matrix(c(4, 2, 8, 5), nrow=2, ncol=2, byrow=TRUE)
1640856168824:B
1640856183941:C = matrix(c(1, 2, 2, 4), nrow=2, ncol=2, byrow=TRUE)
1640856185768:C
1640856276745:AB = A %*% B
1640856292943:AB
1640856375779:AB^T = t(AB)
1640856384630:ABT = t(AB)
1640856387475:ABT
1640856420861:AB_t = t(AB)
1640856501777:A_t = t(A)
1640856503887:A_t
1640856508166:A
1640856523628:B_t = t(B)
1640856525426:B_t
1640856570437:B_t*A_t = B_t %*% A_t
1640856596679:B_t_A_t = B_t %*% A_t
1640856599944:B_t_A_t
1640856743497:A = matrix(c(3, 1, 2, 2), nrow=2, ncol=2, byrow=TRUE)
1640856744039:B = matrix(c(4, 2, 8, 5), nrow=2, ncol=2, byrow=TRUE)
1640856744539:C = matrix(c(1, 2, 2, 4), nrow=2, ncol=2, byrow=TRUE)
1640856745576:AB = A %*% B
1640856747332:ABt = t(AB)
1640856751080:At = t(A)
1640856751978:Bt = t(B)
1640856753347:BtAt = B_t %*% A_t
1640856760657:BtAt = Bt %*% At
1640856762271:identical(ABt, BtAt)
1640857242846:solve(AB)
1640857434119:det(AB)
1640857472624:AB-1 =solve(AB)
1640857577523:AB.inv =solve(AB)
1640857627619:A = matrix(c(3, 1, 2, 2), nrow=2, ncol=2, byrow=TRUE)
1640857628263:B = matrix(c(4, 2, 8, 5), nrow=2, ncol=2, byrow=TRUE)
1640857628847:C = matrix(c(1, 2, 2, 4), nrow=2, ncol=2, byrow=TRUE)
1640857629983:AB = A %*% B
1640857633708:AB.t = t(AB)
1640857635891:A.t = t(A)
1640857637335:B.t = t(B)
1640857640609:B.tA.t = B.t %*% A.t
1640857642492:identical(AB.t, B.tA.t)
1640857644515:det(AB)
1640857654757:AB.inv = solve(AB)
1640857711051:A.inv = solve(A)
1640857711781:B.inv = solve(B)
1640857777841:B.invA.inv = B.inv %*% A.inv
1640857801591:identical(AB.inv, B.invA.inv)
1640857850209:B.inv-A.inv = B.inv %*% A.inv
1640857854341:B.inv_A.inv = B.inv %*% A.inv
1640857867364:A = matrix(c(3, 1, 2, 2), nrow=2, ncol=2, byrow=TRUE)
1640857868060:B = matrix(c(4, 2, 8, 5), nrow=2, ncol=2, byrow=TRUE)
1640857868601:C = matrix(c(1, 2, 2, 4), nrow=2, ncol=2, byrow=TRUE)
1640857869355:AB = A %*% B
1640857870685:AB.t = t(AB)
1640857872504:A.t = t(A)
1640857873189:B.t = t(B)
1640857882981:B.t_A.t = B.t %*% A.t
1640857884414:identical(AB.t, B.tA.t)
1640857891306:identical(AB.t, B.t_A.t)
1640857893050:det(AB)
1640857901016:AB.inv = solve(AB)
1640857903310:A.inv = solve(A)
1640857905845:B.inv = solve(B)
1640857911173:B.inv_A.inv = B.inv %*% A.inv
1640857913176:identical(AB.inv, B.invA.inv)
1640857918065:identical(AB.inv, B.inv_A.inv)
1640857940492:A
1640857944722:A.inv
1640857996939:B
1640858007412:AB.inv
1640858013323:B.inv_A.inv
1640858023218:identical(AB.inv, B.inv_A.inv)
1640881274589:identical(round(AB.inv, 3), round(B.inv_A.inv, 3))
1640881550630:round(AB.inv, 2)
1640881559293:identical(round(AB.inv, 2), round(B.inv_A.inv, 2))
1640881578838:identical(round(AB.inv, 3), round(B.inv_A.inv, 3))
1640881584129:2
1640881595245:AB.inv = solve(AB)
1640881598890:AB.inv
1640881605599:B.inv_A.inv
1640881725083:identical(round(AB.inv, 3), round(B.inv_A.inv, 3))
1640881822373:A.t.inv = solve(A.t)
1640881825277:A.t.inv
1640881854528:A.inv.t = t(A.inv)
1640881858996:A.inv.t
1640881895834:identical(A.t.inv, A.inv.t)
1640881974600:isTRUE(AB.inv, B.inv_A.inv)
1640882007315:isTRUE(all.equal(AB.inv, B.inv_A.inv))
1640882019371:?all.equal
1640882031554:all.equal(AB.inv, B.inv_A.inv)
1640882140362:all.equal(AB.inv, B.inv_A.inv)
1640882347571:det(AB)
1640882372445:det(A)*det(B)
1640882398336:all.equal(det(AB), det(A)*det(B))
1640882432002:det(t(A))
1640882458349:all.equal(det(t(A)), det(A))
1640939777822:qr(A)
1640940165446:A
1640940182871:qr(A)$rank
1640940208116:qr(B)$rank
1640940212631:qr(C)$rank
1640940231430:qr(C)
1640940401470:diag(A)
1640940444767:diag(A+B)
1640940454137:sum(diag(A+B))
1640940496468:sum(diag(A)) + sum(diag(B))
1640940529212:all.equal(sum(diag(A+B)), sum(diag(A)) + sum(diag(B))
1640940534809:all.equal(sum(diag(A+B)), sum(diag(A)) + sum(diag(B)))
1640940546838:all.equal(sum(diag(A+B)), sum(diag(A))+sum(diag(B)))
1640940586607:sum(diag(AB))
1640940587442:sum(diag(BA))
1640940613877:BA = B %*% A
1640940616988:BA
1640940619470:sum(diag(BA))
1640940621948:sum(diag(AB))
1640940646529:all.equal(sum(diag(AB)), sum(diag(BA)))
1640940712343:eigen(A)
1640940816688:eigen(A)$values
1640940821973:eigen(A)$values[1]
1640940825530:eigen(A)$values[2]
1640940828428:eigen(A)$values[1]
1640941074300:A - eigen(A)$values[1] * diag(2)
1640941089571:det(A - eigen(A)$values[1] * diag(2))
1640941116570:dim(A)
1640941160740:det(A - eigen(A)$values[1] * diag(2))
1640941161303:det(A - eigen(A)$values[2] * diag(2))
1640941198879:eigen(A)[,1]
1640941207136:eigen(A)$vector[,1]
1640941412215:norm(eigen(A)$vector[,1], 2)
1640941423119:norm(eigen(A)$vector[,1], "2")
1640941427941:?norm
1640941470369:norm(eigen(A)$vector[,1], type="2")
1640941480611:norm(eigen(A)$vector[,1], type="1")
1640941501628:norm(eigen(A)$vector[,1], type="2")
1640941553515:eigen(A)$vector[,1], type="2"
1640941558535:eigen(A)$vector[,1]
1640941878079:norm(eigen(A)$vector[,2], type="2")
1640941880943:eigen(A)
1640941968834:eigen(C)
1640941996489:# |A-λI|=0の確認
1640941996503:det(C - eigen(C)$values[1] * diag(2))
1640942012886:# 固有値ベクトルの長さの確認
1640942012898:norm(eigen(C)$vector[,1], type="2")
1640942013531:norm(eigen(C)$vector[,2], type="2")
1640942511497:T = eigen(C)$vectors
1640942513362:T
1640942607532:T.t = t(T)
1640942609967:T.t
1640942658713:T.t %*% C %*% T
1640942704776:round(T.t %*% C %*% T, 3)
1640942806976:eigen(C)
1640942845211:T
1640942871361:T[, 1]
1640942892344:t(T[, 1]) %*% T[, 1]
1640942915061:t(T) %*% T
1640942947233:round(t(T) %*% T, 3)
1640942967699:round(T.t %*% C %*% T, 3)
1640942968320:round(t(T) %*% T, 3)
1640943167527:AB
1640943182279:AB.t
1640943197393:AB.inv
1640943229406:A.t.inv
1640943236427:A.t.inv = solve(A.t)
1640943237315:A.inv.t = t(A.inv)
1640943239069:identical(A.t.inv, A.inv.t)
1640943246690:A.t.inv
1640943272292:det(AB)
1640943276532:det(t(A))
1640943288609:qr(A)$rank
1640943289190:qr(B)$rank
1640943289732:qr(C)$rank
1640943296911:sum(diag(A)) + sum(diag(B))
1640943298800:BA = B %*% A
1640943303608:sum(diag(BA))
1640943321085:eigen(A)
1640943346363:eigen(C)
1641718307766:plot(y ~ x)                           # 散布図を描く
1641718314093:x = c(2.2, 4.1, 5.5, 1.9, 3.4, 2.6, 4.2, 3.7, 4.9, 3.2)
1641718314506:y = c(71, 81, 86, 72, 77, 73, 80, 81, 85, 74)
1641718316343:plot(y ~ x)                           # 散布図を描く
1641718333315:plot(y~x)                           # 散布図を描く
1641718360864:result = lm(y ~ x)                  # 回帰分析を行う
1641718367077:abline(result)                                               # 推定回帰直線を描く
1641718394818:summary(result)
1641730128011:x_mean = mean(x)
1641730144768:y_mean = mean(y)
1641730202854:Sxy = sum((x - x_mean)(y - y_mean))
1641730223272:x - x_mean
1641730231076:y - y_mean
1641730237435:Sxy = sum((x - x_mean) * (y - y_mean))
1641730240302:Sxy
1641730269320:Sxx = sum((x - x_mean)^2)
1641730271366:Sxx
1641730287230:Syy = sum((y - y_mean)^2)
1641730289745:Syy
1641730381095:beta.p = Sxy / Sxx
1641730383576:beta.p
1641730466831:beta1.p = Sxy / Sxx
1641730470474:beta1.p
1641730526023:beta0.p = Sxy / Sxx
1641730579868:beta0.p = y_mean - beta1.p * x_mean
1641730582456:beta0.p
1641730855367:# 寄与率の算出
1641730855380:SR = beta1.p * Sxy
1641730858611:SR
1641730891247:R^2 = SR / Syy
1641730896844:R2 = SR / Syy
1641730898756:R2
1641730917560:Se = Syy - SR
1641730919477:Se
1641730952515:R2 = 1 - Se / Syy
1641730954840:R2
1641731172953:R*2 = 1 - (Se/(length(x)-2)) / (Syy/(length(x)-1))
1641731186957:R2.adj = 1 - (Se/(length(x)-2)) / (Syy/(length(x)-1))
1641731190737:R2.adj
1641731859951:beta1.p
1641732107493:t0 = beta1.p / sqrt((Se/(length(x)-2))/Sxx)
1641732109224:t0
1641732144641:t0 = beta1.p / sqrt((Se/(length(x)-2))/Sxx)
1641732145578:# 描画
1641732145591:graphics::par(new=TRUE)
1641732147073:graphics::curve(dt(x, df=length(x)-2), from=-5, to=5)
1641732149203:graphics::curve(dt(x, df=length(x)-2), from=-5, to=5)
1641732156965:graphics::abline(v=t0, col="blue")
1641732161072:t0
1641732170657:graphics::curve(dt(x, df=length(x)-2), from=-11, to=11)
1641732172337:graphics::abline(v=t0, col="blue")
1641732176950:graphics::abline(v=t0, col="blue")
1641732190855:graphics::abline(v=stats::qt(0.025, df=length(x)-2, lower.tail=FALSE), col="red")
1641732191497:graphics::abline(v=stats::qt(0.025, df=length(x)-2), col="red")
1641732454111:beta1_lower = beta1.p - stats::qt(0.025, df=length(data)-2, lower.tail=FALSE) * sqrt((Se/(length(x)-2))/Sxx)
1641732529445:beta1_lower = beta1.p - stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt((Se/(length(x)-2))/Sxx)
1641732530525:beta1_upper = beta1.p + stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt((Se/(length(x)-2))/Sxx)
1641732534200:beta1_lower
1641732538827:beta1_upper
1641732755303:# 予測値
1641732755312:y.p = beta0.p + beta1.p * x
1641732757471:y.p
1641732889147:# 標準化残差
1641732889157:e.s = (y - y.p) / sqrt()Se/(length(x)-2)
1641732896428:# 標準化残差
1641732896438:e.s = (y - y.p) / sqrt(Se/(length(x)-2))
1641732898621:e.s
1641732919153:Se/(length(x)-2)
1641733102100:# テコ比
1641733102113:h = (1/length(x)) + ((x - x_mean)^2/Sxx)
1641733105582:h
1641733142089:plot(y~x)                           # 散布図を描く
1641733147941:plot(y, x)                           # 散布図を描く
1641733158720:plot(y~x)                           # 散布図を描く
1641733162790:result = lm(y~x)                  # 回帰分析を行う
1641733164795:abline(result)                      # 推定回帰直線を描く
1641733206914:plot(e.s, h)
1641733249674:graphics::abline(h=2.5*mean(h), col="blue")
1641733260816:graphics::par(new=TRUE)
1641733269834:graphics::plot(e.s, h)
1641733271382:graphics::abline(h=2.5*mean(h), col="blue")
1641733298289:?plot
1641733390719:graphics::abline(h=2.5*mean(h), col="blue")
1641733448825:2.5*mean(h)
1641733460260:graphics::plot(e.s, h, xlim=c(-2, 2), ylim=c(0, 0.6))
1641733461932:graphics::abline(h=2.5*mean(h), col="blue")
1641733742441:# 標準化残差の散布図
1641733742456:graphics::par(new=TRUE)
1641733743100:graphics::plot(x, e.s)
1641733744438:graphics::plot(x, e.s)
1641736463391:# x0=5のとき、信頼区間と予測区間を算出する
1641736463407:y0.p = beta0.p + beta1.p * 5
1641736465578:y0.p
1641737128508:y_upper = y0.p + stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt((1/length(x))+((5-x_mean)^2/Sxx))
1641737132163:y_upper
1641737207600:# 母回帰β0＋β1*xの95%信頼区間
1641737207613:y_lower = y0.p - stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt(((1/length(x))+((5-x_mean)^2/Sxx))*(Se/(length(x)-2)))
1641737210724:y_lower
1641737236794:y_upper = y0.p + stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt(((1/length(x))+((5-x_mean)^2/Sxx))*(Se/(length(x)-2)))
1641737240480:y_upper
1641737985459:# 誤差を含めた母回帰β0＋β1*x+εの95%予測区間
1641737985473:y.p_lower = y0.p - stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt((1+(1/length(x))+((5-x_mean)^2/Sxx))*(Se/(length(x)-2)))
1641737986545:y.p_upper = y0.p + stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt((1+(1/length(x))+((5-x_mean)^2/Sxx))*(Se/(length(x)-2)))
1641737989284:y.p_lower
1641737993947:y.p_upper
1642178437092:x = c(2.2, 4.1, 5.5, 1.9, 3.4, 2.6, 4.2, 3.7, 4.9, 3.2)
1642178438898:y = c(71, 81, 86, 72, 77, 73, 80, 81, 85, 74)
1642178439808:plot(y~x)                         # 散布図を描く
1642178440923:result = lm(y~x)                  # 回帰分析を行う
1642178442120:abline(result)                    # 推定回帰直線を描く
1642178443294:summary(result)
1642178445496:x_mean = mean(x)
1642178446491:y_mean = mean(y)
1642178449818:Sxy = sum((x - x_mean) * (y - y_mean))
1642178451998:Sxx = sum((x - x_mean)^2)
1642178453314:Syy = sum((y - y_mean)^2)
1642178459132:# 回帰係数の予測
1642178459144:beta1.p = Sxy / Sxx
1642178465993:beta0.p = y_mean - beta1.p * x_mean
1642178499322:# 寄与率の算出
1642178499336:SR = beta1.p * Sxy
1642178528478:R2 = SR / Syy
1642178533634:Se = Syy - SR
1642178555692:R2 = 1 - Se / Syy
1642178572097:R2.adj = 1 - (Se/(length(x)-2)) / (Syy/(length(x)-1))
1642178580865:t0 = beta1.p / sqrt((Se/(length(x)-2))/Sxx)
1642178670575:# 描画
1642178670587:graphics::par(new=TRUE)
1642178674134:graphics::curve(dt(x, df=length(x)-2), from=-11, to=11)
1642178676435:graphics::curve(dt(x, df=length(x)-2), from=-11, to=11)
1642178679176:graphics::abline(v=t0, col="blue")
1642178681890:graphics::abline(v=stats::qt(0.025, df=length(x)-2, lower.tail=FALSE), col="red")
1642178683005:graphics::abline(v=stats::qt(0.025, df=length(x)-2), col="red")
1642178693082:beta1_lower = beta1.p - stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt((Se/(length(x)-2))/Sxx)
1642178694406:beta1_upper = beta1.p + stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt((Se/(length(x)-2))/Sxx)
1642178706812:beta1_lower
1642178710568:beta1_upper
1642178717886:# 予測値
1642178717898:y.p = beta0.p + beta1.p * x
1642178720164:y.p
1642178726229:# 標準化残差
1642178727139:# 標準化残差
1642178732827:e.s = (y - y.p) / sqrt(Se/(length(x)-2))
1642178770173:# テコ比
1642178770183:h = (1/length(x)) + ((x - x_mean)^2/Sxx)
1642178777379:h
1642178791579:# テコ比の描画
1642178791593:graphics::par(new=TRUE)
1642178793492:graphics::plot(e.s, h, xlim=c(-2, 2), ylim=c(0, 0.6))
1642178795177:graphics::plot(e.s, h, xlim=c(-2, 2), ylim=c(0, 0.6))
1642178795862:graphics::abline(h=2.5*mean(h), col="blue")
1642178797843:# 標準化残差の散布図
1642178797859:graphics::par(new=TRUE)
1642178799573:graphics::plot(x, e.s)
1642178801846:graphics::plot(x, e.s)
1642178809463:# x0=5のとき、母回帰β0＋β1*xの信頼区間と予測区間を算出する
1642178809476:y0.p = beta0.p + beta1.p * 5
1642178817652:# 母回帰β0＋β1*xの95%信頼区間
1642178817665:y_lower = y0.p - stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt(((1/length(x))+((5-x_mean)^2/Sxx))*(Se/(length(x)-2)))
1642178818723:y_upper = y0.p + stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt(((1/length(x))+((5-x_mean)^2/Sxx))*(Se/(length(x)-2)))
1642178822807:y_lower
1642178826565:y_upper
1642178831990:# 誤差を含めた母回帰β0＋β1*x+εの95%予測区間
1642178832003:y.p_lower = y0.p - stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt((1+(1/length(x))+((5-x_mean)^2/Sxx))*(Se/(length(x)-2)))
1642178832015:y.p_upper = y0.p + stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt((1+(1/length(x))+((5-x_mean)^2/Sxx))*(Se/(length(x)-2)))
1642178837248:y.p_lower
1642178840798:y.p_upper
1642178997787:x = c(12, 12, 11, 7, 8, 9, 14, 11)
1642178998464:y = c(22, 24, 21, 19, 19, 22, 24, 23)
1642179019982:x = c(12, 12, 11, 7, 8, 9, 14, 11)
1642179020545:y = c(22, 24, 21, 19, 19, 22, 24, 23)
1642179021996:plot(y~x)                         # 散布図を描く
1642179023589:result = lm(y~x)                  # 回帰分析を行う
1642179032332:abline(result)                    # 推定回帰直線を描く
1642179034686:summary(result)
1642179211070:Sxx = sum((x - mean(x))^2)
1642179213138:Sxx
1642179237842:Syy = sum((y - mean(y))^2)
1642179239643:Syy
1642179259963:Sxy = sum((x - mean(x))*(y - mean(y)))
1642179263437:Sxx
1642179265929:Syy
1642179268813:Sxy
1642179288782:describe(x)
1642179380430:library(psych)
1642179408544:library(psych)
1642179413762:describe(x)
1642179437057:summary(x)
1642179447949:summary(y)
1642179459202:describe(y)
1642179559907:β0.p = Syy/Sxx
1642179562986:β0.p
1642179604945:β1.p = Sxy/Sxx
1642179607631:β1.p
1642179639111:β0.p = mean(y) - β1.p * mean(x)
1642179641595:β0.p
1642179696040:summary(result)
1642179804491:# 寄与率の算出
1642179804501:SR = β1.p * Sxy
1642179806798:SR
1642179814287:R2 = SR / Syy
1642179815959:R2
1642179857852:Se = Syy - SR
1642179859685:Se
1642180284236:Se = Syy - SR
1642180284943:R2 = 1 - Se / Syy
1642180287500:R2
1642180332644:R2.adj = 1 - (Se/(length(x)-2))/(Syy/(length(x)-1))
1642180335272:R2.adj
1642180641357:t0 = β1.p/sqrt((Se/(length(x)-2))/Sxx)
1642180679853:# 描画
1642180679863:graphics::par(new=TRUE)
1642180680473:graphics::curve(dt(x, df=length(x)-2), from=-11, to=11)
1642180681872:graphics::curve(dt(x, df=length(x)-2), from=-11, to=11)
1642180688784:t0
1642180698983:graphics::curve(dt(x, df=length(x)-2), from=-5, to=5)
1642180701377:graphics::abline(v=t0, col="blue")
1642180713146:graphics::abline(v=stats::qt(0.025, df=length(x)-2, lower.tail=FALSE), col="red")
1642180714515:graphics::abline(v=stats::qt(0.025, df=length(x)-2), col="red")
1642180729105:summary(result)
1642180867242:β1_lower = β.p - stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt((Se/(length(x)-2))/Sxx)
1642180873317:β1_lower = β1.p - stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt((Se/(length(x)-2))/Sxx)
1642180874123:β1_upper = β1.p + stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt((Se/(length(x)-2))/Sxx)
1642180877308:β1_lower
1642180881606:β1_upper
1642180976541:# 予測値
1642180976554:y.p = β0.p + β.p * x
1642180980976:# 予測値
1642180980990:y.p = β0.p + β1.p * x
1642181000324:summary(y.p)
1642181012964:describe(y.p)
1642181043484:# 標準化残差
1642181043497:e.s = (y - y.p) / sqrt(Se/(length(x)-2))
1642181046851:e.s
1642181060646:summary(e.s)
1642181071149:describe(e.s)
1642181154880:# テコ比
1642181154894:h = (1/length(x)) + ((x - mean(x))^2/Sxx)
1642181160963:h
1642181170192:summary(h)
1642181176789:describe(h)
1642181197564:# テコ比の描画
1642181197577:graphics::par(new=TRUE)
1642181204640:graphics::plot(e.s, h, xlim=c(-2, 2), ylim=c(0, 0.6))
1642181207045:graphics::plot(e.s, h, xlim=c(-2, 2), ylim=c(0, 0.6))
1642181239947:graphics::abline(h=2.5*mean(h), col="blue")
1642181243115:graphics::abline(h=2.5*mean(h), col="blue")
1642181252336:2.5*mean(h)
1642181259633:graphics::plot(e.s, h, xlim=c(-2, 2), ylim=c(0, 0.8))
1642181260739:graphics::abline(h=2.5*mean(h), col="blue")
1642181306210:# 標準化残差の散布図
1642181306223:graphics::par(new=TRUE)
1642181307406:graphics::plot(x, e.s)
1642181309564:graphics::plot(x, e.s)
1642181313910:graphics::plot(x, e.s)
1642181427564:# x=15のとき、母回帰β0＋β1*xの信頼区間と予測区間を算出する
1642181427576:y.p = β0.p + β1.p * 15
1642181433646:y.p
1642181525397:# x=15のとき、母回帰β0＋β1*xの信頼区間と予測区間を算出する
1642181525410:y0.p = β0.p + β1.p * 15
1642181528362:y0.p
1642181579810:# 母回帰β0＋β1*xの95%信頼区間
1642181579820:y_lower = y0.p - stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt(((1/length(x))+((15-mean(x))^2/Sxx))*(Se/(length(x)-2)))
1642181580413:y_upper = y0.p + stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt(((1/length(x))+((15-mean(x))^2/Sxx))*(Se/(length(x)-2)))
1642181632257:# 誤差を含めた母回帰β0＋β1*x+εの95%予測区間
1642181632269:y.p_lower = y0.p - stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt((1+(1/length(x))+((15-mean(x))^2/Sxx))*(Se/(length(x)-2)))
1642181632877:y.p_upper = y0.p + stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt((1+(1/length(x))+((15-mean(x))^2/Sxx))*(Se/(length(x)-2)))
1642181640097:y.p_lower
1642181643474:y.p_upper
1642181651379:y_lower
1642181654591:y_upper
1642181737983:# 母回帰β0＋β1*xの95%信頼区間
1642181737995:y.p1_lower = y0.p - stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt(((1/length(x))+((15-mean(x))^2/Sxx))*(Se/(length(x)-2)))
1642181738542:y.p1_upper = y0.p + stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt(((1/length(x))+((15-mean(x))^2/Sxx))*(Se/(length(x)-2)))
1642181739432:# 誤差を含めた母回帰β0＋β1*x+εの95%予測区間
1642181739445:y.p2_lower = y0.p - stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt((1+(1/length(x))+((15-mean(x))^2/Sxx))*(Se/(length(x)-2)))
1642181739959:y.p2_upper = y0.p + stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt((1+(1/length(x))+((15-mean(x))^2/Sxx))*(Se/(length(x)-2)))
1642181744718:y.p1_lower
1642181747881:y.p1_upper
1642181751225:y.p2_lower
1642181754917:y.p2_upper
1642181833127:β1.p
1642181835404:β0.p
1642181846465:R2
1642181849090:R2.adj
1642181859090:t0
1642181889520:e.s
1642181906532:round(e.s, 2)
1642181925181:round(h, 2)
1642183611019:# 描画
1642183611032:graphics::par(new=TRUE)
1642183611479:graphics::curve(dt(x, df=length(x)-2), from=-5, to=5)
1642183613284:graphics::curve(dt(x, df=length(x)-2), from=-5, to=5)
1642183613926:graphics::abline(v=t0, col="blue")
1642183614773:graphics::abline(v=stats::qt(0.025, df=length(x)-2, lower.tail=FALSE), col="red")
1642183616953:graphics::abline(v=stats::qt(0.025, df=length(x)-2), col="red")
1642183636309:# テコ比の描画
1642183636322:graphics::par(new=TRUE)
1642183636608:graphics::plot(e.s, h, xlim=c(-2, 2), ylim=c(0, 0.8))
1642183637574:graphics::plot(e.s, h, xlim=c(-2, 2), ylim=c(0, 0.8))
1642183638266:graphics::abline(h=2.5*mean(h), col="blue")
1642603479215:df = data.frame(x1, x2, y)
1642603490782:x1 = c(51, 38, 57, 51, 53, 77, 63, 69, 72, 73)
1642603491946:x2 = c(16, 4, 16, 11, 4, 22, 5, 5, 2, 1)
1642603492448:y = c(3.0, 3.2, 3.3, 3.9, 4.4, 4.5, 4.5, 5.4, 5.4, 6.0)
1642603492946:df = data.frame(x1, x2, y)
1642603495742:df
1642603527818:pairs(df)
1642603549017:?pairs
1642603603361:graphics::pairs(df)
1642603605996:library(psych)
1642603611024:psych::pairs.panels(df)
1642603678250:library(corrplot)
1642603739851:library(corrplot)
1642603741483:corrplot::corrplot(cor(df[,-5]))
1642603836566:library(tidyverse)
1642603838035:library(GGally)
1642603946734:library(GGally)
1642603948162:ggpairs(df)
1642604084010:cor(df)
1642604106017:round(cor(df), 2)
1642604183469:corrplot::corrplot(round(cor(df), 2), method="color", addCoef.col=TRUE)
1642604300385:ggpairs(df)
1642604533754:psych::pairs.panels(df)
1642604625147:psych::pairs.panels(df, hist.col="white", rug=FALSE, ellipses=FALSE, lm=TRUE)
1642604641421:?pairs.panels
1642604929001:corrplot::corrplot(round(cor(df), 2), method="color", addCoef.col=TRUE)
1642604932252:psych::pairs.panels(df, hist.col="white", rug=FALSE, ellipses=FALSE, lm=TRUE)
1642605267922:psych::pairs.panels(df, hist.col="white", rug=FALSE, ellipses=FALSE, lm=TRUE)
1642605285360:psych::pairs.panels(df, hist.col="white", rug=FALSE, ellipses=TRUE, lm=TRUE)
1642605294201:psych::pairs.panels(df, hist.col="white", rug=FALSE, ellipses=FALSE, lm=TRUE)
1642605299928:psych::pairs.panels(df, hist.col="white", rug=TRUE, ellipses=FALSE, lm=TRUE)
1642605309918:psych::pairs.panels(df, hist.col="white", rug=FALSE, ellipses=FALSE, lm=TRUE)
1642780112541:ggpairs(df)
1642780115921:library(tidyverse)
1642780116729:library(GGally)
1642780118764:ggpairs(df)
1642780124747:library(psych)
1642780125860:psych::pairs.panels(df)
1642780127631:psych::pairs.panels(df, hist.col="white", rug=FALSE, ellipses=FALSE, lm=TRUE)
1642780300201:result = lm(y~x1+x2)
1642780302596:summary(result)
1642780494676:S11 = sum((X1-mean(x1))^2)
1642780499546:S11 = sum((x1-mean(x1))^2)
1642780502144:S11
1642780531304:S12 = sum((x1-mean(x1))*(x2-mean(x2)))
1642780533268:S12
1642780565277:S22 = sum((x2-mean(x2))^2)
1642780568163:S22
1642780594507:S1y = sum((x1-mean(x1))*(y-mean(y)))
1642780596429:S1y
1642780613895:S2y = sum((x2-mean(x2))*(y-mean(y)))
1642780615573:S2y
1642780726006:S = matrix(c(S11, S12, S12, S22), nrow=2, ncol=2, byrow=TRUE)
1642780728097:S
1642780750573:S = matrix(c(S11, S12, S12, S22), nrow=2, ncol=2)
1642780751987:S
1642780800475:S.inv = solve(S)
1642780802968:S.inv
1642780822881:det(S)
1642781028675:beta12 = S.inv %*% t(c(S1y, S2y))
1642781046756:beta12 = S.inv %*% c(S1y, S2y)
1642781049891:beta12
1642781076527:summary(result)
1642781147952:beta12
1642781168957:c(S1y, S2y)
1642781183853:t(c(S1y, S2y))
1642781193995:beta12 = S.inv %*% c(S1y, S2y)
1642781196476:beta12
1642781221111:det(S)
1642781238311:beta12
1642781294444:beta12[2,]
1642781334695:beta0 = mean(y) - beta12[1,]*mean(x1) - beta12[2,]*mean(x2)
1642781336961:beta0
1642781478778:summary(result)
1642782291217:y^ = beta0 + beta12[1,]*x1 + beta12[2,]*x2
1642782297396:y.p = beta0 + beta12[1,]*x1 + beta12[2,]*x2
1642782299840:y.p
1642782312984:plot(y, y.p)
1642782412935:R = sum((y-mean(y))*(y.p-mean(y.p)))/sqrt(sum((y-mean(y))^2)*sum((y.p-mean(y.p))^2))
1642782416836:R
1642782427841:R2 = R^2
1642782430062:R2
1642782520419:# 重相関係数、決定係数の算出
1642782520432:y.p = beta0 + beta12[1,]*x1 + beta12[2,]*x2
1642782522885:plot(y, y.p)
1642782524817:abline(result)
1642782578467:R2
1642782789903:Se = sum((y-y.p)^2)
1642782792841:Se
1642782929715:R2.adj = 1 - (Se/(length(y)-3)) / (Syy/(length(y)-1))
1642782955584:Syy = sum((y-mean(y))^2)
1642782957139:R2.adj = 1 - (Se/(length(y)-3)) / (Syy/(length(y)-1))
1642782959455:R2.adj
1642782964530:summary(result)
1642784765287:Se_M1 = Syy - S1y^2/S11
1642784767472:Se_M1
1642784893784:F0 = ((Syy - Se_M1)/(length(y)-(length(y)-2)))/(Se_M1/(length(y)-2))
1642784895513:F0
1642784940886:F0 = ((Syy - Se_M1)/((length(y)-1)-(length(y)-2)))/(Se_M1/(length(y)-2))
1642784942760:F0
1642785007967:Se_M1_1 = Syy - S1y^2/S11
1642785009172:F0_1 = ((Syy - Se_M1_1)/((length(y)-1)-(length(y)-2)))/(Se_M1_1/(length(y)-2))
1642785011348:F0_1
1642785031089:Se_M1_2 = Syy - S2y^2/S11
1642785031572:F0_2 = ((Syy - Se_M1_2)/((length(y)-1)-(length(y)-2)))/(Se_M1_2/(length(y)-2))
1642785033682:F0_2
1642785069406:Se_M1_2
1642785077768:Se_M1_2 = Syy - S2y^2/S22
1642785081551:Se_M1_2
1642785086340:F0_2 = ((Syy - Se_M1_2)/((length(y)-1)-(length(y)-2)))/(Se_M1_2/(length(y)-2))
1642785088477:F0_2
1642785219822:Se
1642785271693:Se_M2 = Se
1642785273653:Se_M2
1642785366076:F0 = (Se_M1 - Se_M2)/((length(y)-2)-(length(y)-3))/(Se_M2/length(y)-3)
1642785370604:F0
1642785385441:length(y)-3
1642785397048:Se_M2
1642785408814:F0 = ((Se_M1 - Se_M2)/((length(y)-2)-(length(y)-3)))/(Se_M2/length(y)-3)
1642785410653:F0
1642785439850:F0 = ((Se_M1 - Se_M2)/((length(y)-2)-(length(y)-3)))/(Se_M2/(length(y)-3))
1642785441457:F0
1642786713858:y.p
1642786732923:# 予測値
1642786732937:y.p
1642786780739:# 標準化残差
1642786780752:e=y-y.p
1642786783244:e
1642786869176:e.s = e / sqrt(Se/(length(y)-3))
1642786871426:e.s
1642787019376:S.inv
1642787225474:# テコ比
1642787225487:# マハラノビス距離
1642787225501:D = (length(y)-1)*(((x1-mean(x1))^2)*S.inv[1, 1] +
1642787225513:2*(x1-mean(x1))*(x2-mean(x2))*S.inv[1, 2] +
1642787225526:((x2-mean(x2))^2)*S.inv[2, 2])
1642787227823:D
1642787392048:D2 = (length(y)-1)*(((x1-mean(x1))^2)*S.inv[1, 1]
1642787392060:+ 2*(x1-mean(x1))*(x2-mean(x2))*S.inv[1, 2] + ((x2-mean(x2))^2)*S.inv[2, 2])
1642787398703:D2
1642787444686:h = (1/length(y)) + (D2/(length(y)-1))
1642787446322:h
1642787525956:# テコ比の描画
1642787525968:graphics::par(new=TRUE)
1642787532723:graphics::plot(e.s, h, xlim=c(-2, 2), ylim=c(0, 0.8))
1642787535024:graphics::plot(e.s, h, xlim=c(-2, 2), ylim=c(0, 0.8))
1642787547496:e.s
1642787555995:h
1642787582049:2.5*mean(h)
1642787585535:graphics::abline(h=2.5*mean(h), col="blue")
1642787594995:# 標準化残差の散布図
1642787595008:graphics::par(new=TRUE)
1642787596867:graphics::plot(x, e.s)
1642787606738:graphics::plot(x1, e.s)
1642787609169:graphics::plot(x1, e.s)
1642787614675:graphics::plot(x1, e.s)
1642787619240:# 標準化残差の散布図
1642787619254:graphics::par(new=TRUE)
1642787619946:graphics::plot(x1, e.s)
1642787620404:graphics::plot(x1, e.s)
1642787625482:graphics::plot(x2, e.s)
1642787665763:# 標準化残差の散布図
1642787665775:graphics::par(col=2)
1642787666691:graphics::plot(x1, e.s)
1642787667808:graphics::plot(x2, e.s)
1642787736937:# 標準化残差の散布図
1642787736947:graphics::par(mfrow=c(1,2))
1642787737940:graphics::plot(x1, e.s)
1642787739740:graphics::plot(x2, e.s)
1642787742353:# テコ比の描画
1642787742364:graphics::par(new=TRUE)
1642787744616:# 標準化残差の散布図
1642787744628:graphics::par(mfrow=c(1,2))
1642787745525:graphics::plot(x1, e.s)
1642787746088:graphics::plot(x2, e.s)
1642787778646:dev.off()
1642787780879:# 標準化残差の散布図
1642787780891:graphics::par(mfrow=c(1,2))
1642787781274:graphics::plot(x1, e.s)
1642787781900:graphics::plot(x2, e.s)
1642787790061:?dev.off
1642787930033:# テコ比の描画
1642787930047:graphics::par(new=TRUE)
1642787930808:graphics::plot(e.s, h, xlim=c(-2, 2), ylim=c(0, 0.8))
1642787937189:graphics::abline(h=2.5*mean(h), col="blue")
1642787949484:dev.off()
1642787952016:# 標準化残差の散布図
1642787952030:graphics::par(mfrow=c(1,2))
1642787953532:graphics::plot(x1, e.s)
1642787955821:graphics::abline(h=2.5*mean(h), col="blue")
1642787957588:graphics::plot(x2, e.s)
1642787959832:graphics::abline(h=2.5*mean(h), col="blue")
1642787984679:dev.off()
1642787987350:# 標準化残差の散布図
1642787987361:graphics::par(mfrow=c(1,2))
1642787988195:graphics::plot(x1, e.s)
1642787988962:graphics::abline(h=0, col="blue")
1642787989707:graphics::plot(x2, e.s)
1642787990228:graphics::abline(h=0, col="blue")
1642788396117:y0.p = beta0 + beta12[1,]*70 + beta12[2,]*10
1642788398494:y0.p
1642788470841:y0.p = beta0 + beta12[1,]*70 + beta12[2,]*10
1642788475409:y0.p
1642788799647:# 母回帰β0＋β1*xの95%信頼区間
1642788799660:y.p1_lower = y0.p - stats::qt(0.025, df=length(x)-2, lower.tail=FALSE) * sqrt(((1/length(y))+(D02/(length(y)-1)))*(Se/(length(y)-3)))
1642788820648:# 母回帰β0＋β1*xの95%信頼区間
1642788820661:y.p1_lower = y0.p - stats::qt(0.025, df=length(y)-3, lower.tail=FALSE) * sqrt(((1/length(y))+(D02/(length(y)-1)))*(Se/(length(y)-3)))
1642788824720:D02 = (length(y)-1)*(((70-mean(x1))^2)*S.inv[1, 1]
1642788824731:+ 2*(70-mean(x1))*(10-mean(x2))*S.inv[1, 2] + ((10-mean(x2))^2)*S.inv[2, 2])
1642788825803:# 母回帰β0＋β1*xの95%信頼区間
1642788825817:y.p1_lower = y0.p - stats::qt(0.025, df=length(y)-3, lower.tail=FALSE) * sqrt(((1/length(y))+(D02/(length(y)-1)))*(Se/(length(y)-3)))
1642788826610:y.p1_lower = y0.p + stats::qt(0.025, df=length(y)-3, lower.tail=FALSE) * sqrt(((1/length(y))+(D02/(length(y)-1)))*(Se/(length(y)-3)))
1642788833420:# 母回帰β0＋β1*xの95%信頼区間
1642788833433:y.p1_lower = y0.p - stats::qt(0.025, df=length(y)-3, lower.tail=FALSE) * sqrt(((1/length(y))+(D02/(length(y)-1)))*(Se/(length(y)-3)))
1642788834341:y.p1_upper = y0.p + stats::qt(0.025, df=length(y)-3, lower.tail=FALSE) * sqrt(((1/length(y))+(D02/(length(y)-1)))*(Se/(length(y)-3)))
1642788837031:y.p1_lower
1642788839428:y.p1_upper
1642788926773:y0.p
1642789152726:# 母回帰β0＋β1*x+εの95%予測区間
1642789152738:y.p1_lower = y0.p - stats::qt(0.025, df=length(y)-3, lower.tail=FALSE) * sqrt((1+(1/length(y))+(D02/(length(y)-1)))*(Se/(length(y)-3)))
1642789153593:y.p1_upper = y0.p + stats::qt(0.025, df=length(y)-3, lower.tail=FALSE) * sqrt((1+(1/length(y))+(D02/(length(y)-1)))*(Se/(length(y)-3)))
1642789161355:# 母回帰β0＋β1*x+εの95%予測区間
1642789161368:y.p2_lower = y0.p - stats::qt(0.025, df=length(y)-3, lower.tail=FALSE) * sqrt((1+(1/length(y))+(D02/(length(y)-1)))*(Se/(length(y)-3)))
1642789161895:y.p2_upper = y0.p + stats::qt(0.025, df=length(y)-3, lower.tail=FALSE) * sqrt((1+(1/length(y))+(D02/(length(y)-1)))*(Se/(length(y)-3)))
1642789163743:# 母回帰β0＋β1*xの95%信頼区間
1642789163756:y.p1_lower = y0.p - stats::qt(0.025, df=length(y)-3, lower.tail=FALSE) * sqrt(((1/length(y))+(D02/(length(y)-1)))*(Se/(length(y)-3)))
1642789163999:y.p1_upper = y0.p + stats::qt(0.025, df=length(y)-3, lower.tail=FALSE) * sqrt(((1/length(y))+(D02/(length(y)-1)))*(Se/(length(y)-3)))
1642789167327:y.p2_lower
1642789170757:y.p2_upper
